<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(TUJ) Fluxo básico geral">
    <description><![CDATA[Código do fluxo: TUJ_FBG

Descrição: Fluxo básico geral de entrada dos processos.

Raia        Localização     Papel
Secretaria  Secretaria TUJ  Chefe de Secretaria]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (TUJ) Fluxo básico geral">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('10265:1338')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="(TUJ) Autos recebidos das Turmas Recursais" name="(TUJ) Autos recebidos das Turmas Recursais"/>
    </start-state>  
    <!-- NODES -->
    <process-state name="(TUJ) Autos recebidos das Turmas Recursais">
        <sub-process name="(TUJ) Autos recebidos das Turmas Recursais" binding="late"/>
        <transition to="(TUJ) Encaminhar para elaborar certidão" name="(TUJ) Encaminhar para elaborar certidão"/>
    </process-state>
    <process-state name="(TUJ) Encaminhar para elaborar certidão">
        <sub-process name="(TUJ) Elaboração de certidão" binding="late"/>
        <transition to="(TUJ) Remessa para admissibilidade" name="(TUJ) Remessa para admissibilidade"/>
    </process-state>
    <process-state name="(TUJ) Remessa para admissibilidade">
        <sub-process name="(TUJ) Preparar ato judicial para decisão de admissibilidade" binding="late"/>
        <transition to="(TUJ) Intimar ou cumprir determinações?" name="(TUJ) Intimar ou cumprir determinações?"/>
    </process-state>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('tuj:aut_rec_pre:transicaoSaida') ? tramitacaoProcessualService.recuperaVariavel('tuj:aut_rec_pre:transicaoSaida') : 'Secretaria - ANALISAR'}" name="(TUJ) Intimar ou cumprir determinações?">
        <transition to="(TUJ) Secretaria - ANALISAR" name="Secretaria - ANALISAR"/>
        <transition to="(TUJ) Intimar" name="Intimar"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('tuj:aut_rec_pre:transicaoSaida')}"/>
        </event>
    </decision>
    <task-node end-tasks="true" name="(TUJ) Secretaria - ANALISAR">
        <task name="(TUJ) Secretaria - ANALISAR" swimlane="Secretaria">
            <controller>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: movimentacaoLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Nó de Desvio - (TUJ) Fluxo básico geral" name="Nó de Desvio - (TUJ) Fluxo básico geral">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(TUJ) Intimar" name="Intimar"/>
        <transition to="Término" name="Devolver para a Turma Recursal"/>
        <transition to="(TUJ) Existe assunto principal?" name="Sortear para um dos relatores">
            <condition expression="#{not tramitacaoProcessualService.recuperaVariavel('pje:fluxo:tuj:devolverTR')}"/>
        </transition>
        <transition to="(TUJ) Redistribuição" name="Redistribuir processo"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <process-state name="(TUJ) Intimar">
        <sub-process name="(TUJ) Preparar ato de comunicação" binding="late"/>
        <transition to="(TUJ) Secretaria - ANALISAR" name="(TUJ) Secretaria - ANALISAR"/>
    </process-state>
    <decision expression="#{(entityManager.createQuery(parametroUtil.getParametro('pje:tjrn:tuj:consultaAssuntoPrincipal')).setParameter(&quot;processo&quot;, tramitacaoProcessualService.recuperaProcesso().getIdProcessoTrf()).getSingleResult() == 0 ? '(TUJ) Sorteio pendente de assunto principal' : '(TUJ) Sortear')}" name="(TUJ) Existe assunto principal?">
        <transition to="(TUJ) Sortear" name="(TUJ) Sortear"/>
        <transition to="(TUJ) Sorteio pendente de assunto principal" name="(TUJ) Sorteio pendente de assunto principal"/>
    </decision>
    <process-state name="(TUJ) Sorteio pendente de assunto principal">
        <sub-process name="(TUJ) Sorteio pendente de assunto principal" binding="late"/>
        <transition to="(TUJ) Sortear ou sair?" name="(TUJ) Sortear ou sair?"/>
    </process-state>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('tuj:sor_pen_ass:transicaoSaida') ? tramitacaoProcessualService.recuperaVariavel('tuj:sor_pen_ass:transicaoSaida') : 'Sortear para um dos relatores'}" name="(TUJ) Sortear ou sair?">
        <transition to="(TUJ) Existe assunto principal?" name="Sortear para um dos relatores"/>
        <transition to="(TUJ) Secretaria - ANALISAR" name="Cancelar e sair da tarefa"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('tuj:sor_pen_ass:transicaoSaida')}"/>
        </event>
    </decision>
    <process-state name="(TUJ) Sortear">
        <sub-process name="(TUJ) Sortear para um dos relatores" binding="late"/>
        <transition to="(TUJ) Autos recebidos da admissibilidade" name="(TUJ) Autos recebidos da admissibilidade"/>
    </process-state>
    <process-state name="(TUJ) Autos recebidos da admissibilidade">
        <sub-process name="(TUJ) Autos recebidos da admissibilidade" binding="late"/>
        <transition to="(TUJ) Enviar concluso ou sair?" name="(TUJ) Enviar concluso ou sair?"/>
    </process-state>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('tuj:aut_rec_adm:transicaoSaida') ? tramitacaoProcessualService.recuperaVariavel('tuj:aut_rec_adm:transicaoSaida') : 'Secretaria - ANALISAR'}" name="(TUJ) Enviar concluso ou sair?">
        <transition to="(TUJ) Enviar concluso para julgamento" name="Enviar concluso para julgamento"/>
        <transition to="(TUJ) Secretaria - ANALISAR" name="Secretaria - ANALISAR"/>
    </decision>
    <process-state name="(TUJ) Enviar concluso para julgamento">
        <sub-process name="(TUJ) Decisão colegiada como relator" binding="late"/>
        <transition to="(TUJ) Secretaria - ANALISAR" name="(TUJ) Secretaria - ANALISAR"/>
    </process-state>
    <process-state name="(TUJ) Redistribuição">
        <sub-process name="(TUJ) Redistribuição" binding="late"/>
        <transition to="(TUJ) Enviar concluso para julgamento" name="(TUJ) Enviar concluso para julgamento"/>
    </process-state>
    <task-node end-tasks="true" name="Nó de Desvio - (TUJ) Fluxo básico geral">
        <task name="Nó de Desvio - (TUJ) Fluxo básico geral" swimlane="Nó de Desvio - (TUJ) Fluxo básico geral"/>
        <transition to="Término" name="Término"/>
        <transition to="(TUJ) Secretaria - ANALISAR" name="(TUJ) Secretaria - ANALISAR"/>
    </task-node>
    <end-state name="Término"/>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS -->
    <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:tuj:devolverTR', true)}"/> 
</process-definition>
