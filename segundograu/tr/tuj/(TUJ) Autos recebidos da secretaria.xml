<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(TUJ) Autos recebidos da secretaria">
    <description><![CDATA[Código do fluxo: TUJ_AUT_REC_SEC
Descrição: Fluxo destinado à análise de processos devolvidos da secretaria para o gabinete..
Raia        Localização     Papel
Assessoria  Assessoria TUJ  Assessor
Assessoria  Gabinete TUJ    Magistrado
Magistrado  Assessoria TUJ  Assessor
Magistrado  Gabinete TUJ    Magistrado]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (TUJ) Autos recebidos da secretaria">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Assessoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('10261:5197,10260:1469')}"/>
    </swimlane>
    <swimlane name="Magistrado">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('10261:5197,10260:1469')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Assessoria"/>
        <transition to="(TUJ) É urgente?" name="(TUJ) É urgente?"/>
    </start-state>  
    <!-- NODES -->
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('tuj:paj:urgente') ? '(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR' : '(TUJ) Autos recebidos da secretaria - ANALISAR' }" name="(TUJ) É urgente?">
        <transition to="(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR" name="(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR"/>
        <transition to="(TUJ) Autos recebidos da secretaria - ANALISAR" name="(TUJ) Autos recebidos da secretaria - ANALISAR"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('tuj:paj:conclusao_cancelada')}"/>
        </event>
    </decision>
    <task-node end-tasks="true" name="(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR">
        <task name="(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR" swimlane="Assessoria">
            <controller>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*
1. Variável: movimentacaoLote
   Label:
   Escrita: Sim
   Obrig.: Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Nó de Desvio - (TUJ) Autos recebidos da secretaria" name="Nó de Desvio - (TUJ) Autos recebidos da secretaria">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(TUJ) Preparação de decisão genérica" name="Preparar decisão"/>
        <transition to="(TUJ) Preparação de decisão de urgência" name="Preparar decisão de urgência"/>
        <transition to="(TUJ) Preparação de decisão de embargos de declaração" name="Preparar decisão sobre embargos de declaração"/>
        <transition to="(TUJ) Preparação de decisão de agravo regimental ou interno" name="Preparar decisão sobre agravo regimental ou interno">
            <condition expression="#{!empty tramitacaoProcessualService.recuperaVariavel('tuj:remadmrec:idOj')}"/>
        </transition>
        <transition to="(TUJ) Preparação de decisão sobre agravo em REsp. e RExt." name="Preparar decisão sobre agravo em REsp. e RExt.">
            <condition expression="#{!empty tramitacaoProcessualService.recuperaVariavel('tuj:remadmrec:idOj')}"/>
        </transition>
        <transition to="(TUJ) Preparação de despacho genérico" name="Preparar despacho"/>
        <transition to="(TUJ) Preparação de julgamento colegiado" name="Preparar voto, relatório e ementa"/>
        <transition to="(TUJ) Preparação de ato ordinatório" name="Preparar ato ordinatório"/>
        <transition to="(TUJ) Preparação de decisão de admissibilidade de recurso" name="Preparar decisão de admissibilidade de recurso">
            <condition expression="#{!empty tramitacaoProcessualService.recuperaVariavel('tuj:remadmrec:idOj')}"/>
        </transition>
        <transition to="(TUJ) Autos recebidos da secretaria - ANALISAR" name="Encaminhar para &quot;Autos recebidos da secretaria - ANALISAR&quot;">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </transition>
    </task-node>
    <task-node end-tasks="true" name="(TUJ) Autos recebidos da secretaria - ANALISAR">
        <task name="(TUJ) Autos recebidos da secretaria - ANALISAR" swimlane="Assessoria">
            <controller>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*
1. Variável: movimentacaoLote
   Label:
   Escrita: Sim
   Obrig.: Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Nó de Desvio - (TUJ) Autos recebidos da secretaria" name="Nó de Desvio - (TUJ) Autos recebidos da secretaria">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(TUJ) Preparação de decisão genérica" name="Preparar decisão"/>
        <transition to="(TUJ) Preparação de decisão de urgência" name="Preparar decisão de urgência"/>
        <transition to="(TUJ) Preparação de decisão de embargos de declaração" name="Preparar decisão sobre embargos de declaração"/>
        <transition to="(TUJ) Preparação de decisão de agravo regimental ou interno" name="Preparar decisão sobre agravo regimental ou interno">
            <condition expression="#{!empty tramitacaoProcessualService.recuperaVariavel('tuj:remadmrec:idOj')}"/>
        </transition>
        <transition to="(TUJ) Preparação de decisão sobre agravo em REsp. e RExt." name="Preparar decisão sobre agravo em REsp. e RExt.">
            <condition expression="#{!empty tramitacaoProcessualService.recuperaVariavel('tuj:remadmrec:idOj')}"/>
        </transition>
        <transition to="(TUJ) Preparação de despacho genérico" name="Preparar despacho"/>
        <transition to="(TUJ) Preparação de julgamento colegiado" name="Preparar voto, relatório e ementa"/>
        <transition to="(TUJ) Preparação de ato ordinatório" name="Preparar ato ordinatório"/>
        <transition to="(TUJ) Preparação de decisão de admissibilidade de recurso" name="Preparar decisão de admissibilidade de recurso">
            <condition expression="#{!empty tramitacaoProcessualService.recuperaVariavel('tuj:remadmrec:idOj')}"/>
        </transition>
        <transition to="(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR" name="Encaminhar para &quot;(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR&quot;">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', true)}"/>
        </transition>
    </task-node>
    <process-state name="(TUJ) Preparação de decisão genérica">
        <sub-process name="(TUJ) Preparar ato judicial de decisão genérica" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de decisão de urgência">
        <sub-process name="(TUJ) Preparar ato judicial de decisão de urgência" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', true)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de decisão de embargos de declaração">
        <sub-process name="(TUJ) Preparar ato judicial de decisão de embargo de declaração" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de decisão de agravo regimental ou interno">
        <sub-process name="(TUJ) Preparar ato judicial de decisão de agravo regimental ou interno" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de decisão sobre agravo em REsp. e RExt.">
        <sub-process name="(TUJ) Preparar ato judicial de decisão sobre agravo em resp. ou rext." binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de despacho genérico">
        <sub-process name="(TUJ) Preparar ato judicial de despacho genérico" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de julgamento colegiado">
        <sub-process name="(TUJ) Decisão colegiada como relator" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de ato ordinatório">
        <sub-process name="(TUJ) Expedição de ato ordinatório de gabinete" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <process-state name="(TUJ) Preparação de decisão de admissibilidade de recurso">
        <sub-process name="(TUJ) Preparar ato judicial de decisão de admissibilidade de recurso" binding="late"/>
        <transition to="(TUJ) Conclusão cancelada?" name="(TUJ) Conclusão cancelada?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:paj:urgente', false)}"/>
        </event>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('tuj:paj:conclusao_cancelada') == true ? '(TUJ) É urgente?' : '(TUJ) Apaga variáveis do fluxo'}" name="(TUJ) Conclusão cancelada?">
        <transition to="(TUJ) É urgente?" name="(TUJ) É urgente?"/>
        <transition to="(TUJ) Apaga variáveis do fluxo" name="(TUJ) Apaga variáveis do fluxo"/>
    </decision>
    <node name="(TUJ) Apaga variáveis do fluxo">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('tuj:paj:conclusao_cancelada')}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (TUJ) Autos recebidos da secretaria">
        <task name="Nó de Desvio - (TUJ) Autos recebidos da secretaria" swimlane="Nó de Desvio - (TUJ) Autos recebidos da secretaria"/>
        <transition to="Término" name="Término"/>
        <transition to="(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR" name="(TUJ) Autos recebidos da secretaria [Urgente] - ANALISAR"/>
        <transition to="(TUJ) Autos recebidos da secretaria - ANALISAR" name="(TUJ) Autos recebidos da secretaria - ANALISAR"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
