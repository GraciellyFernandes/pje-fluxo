<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(TUJ) Autos recebidos das Turmas Recursais">
    <description><![CDATA[Código do fluxo: TUJ_AUT_REC_TR

Descrição: Fluxo destinado à análise de processos enviados das turmas recursais para a secretaria da TUJ.

Raia        Localização     Papel
Secretaria  Secretaria TUJ  Chefe de Secretaria]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (TUJ) Autos recebidos das Turmas Recursais">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('7283:1338')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to="(TUJ) Remeter para TUJ" name="(TUJ) Remeter para TUJ"/>
    </start-state>  
    <!-- NODES -->
    <node name="(TUJ) Remeter para TUJ">
        <transition to="(TUJ) Autos recebidos das Turmas Recursais - ANALISAR" name="(TUJ) Autos recebidos das Turmas Recursais - ANALISAR"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(123).comComplementoDeCodigo(7).doTipoLivre().preencherComTexto('Turma de Uniformização de Jurisprudência').comComplementoDeCodigo(18).doTipoDominio().preencherComElementoDeCodigo(40).lancarMovimento()}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:remadmrec:idOj', tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:remadmrec:idOjCargo', tramitacaoProcessualService.recuperaProcesso().orgaoJulgadorCargo.idOrgaoJulgadorCargo)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:remadmrec:idOjColegiado', tramitacaoProcessualService.recuperaProcesso().orgaoJulgadorColegiado.idOrgaoJulgadorColegiado)}"/>
            <action expression="#{processoJudicialService.deslocarOrgaoJulgador(tramitacaoProcessualService.recuperaProcesso(),parametroUtil.getParametro('pje:tjrn:tuj:orgaoJulgador'),parametroUtil.getParametro('pje:tjrn:tuj:orgaoJulgadorColegiado'),parametroUtil.getParametro('pje:tjrn:tuj:orgaoJulgadorCargo'),true)}"/>
            <action name="upd" expression="#{entityManager.createQuery(&quot;UPDATE ProcessoTrf p SET p.competencia.id = 7 WHERE p.idProcessoTrf = :idProcessoTrf&quot;).setParameter(&quot;idProcessoTrf&quot;, tramitacaoProcessualService.recuperaProcesso().idProcessoTrf).executeUpdate()}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:tuj:devolverTR', false)}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(TUJ) Autos recebidos das Turmas Recursais - ANALISAR">
        <task name="(TUJ) Autos recebidos das Turmas Recursais - ANALISAR" swimlane="Secretaria"/>
        <transition to="Nó de Desvio - (TUJ) Autos recebidos das Turmas Recursais" name="Nó de Desvio - (TUJ) Autos recebidos das Turmas Recursais">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Emitir certidão de recebimento"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (TUJ) Autos recebidos das Turmas Recursais">
        <task name="Nó de Desvio - (TUJ) Autos recebidos das Turmas Recursais" swimlane="Nó de Desvio - (TUJ) Autos recebidos das Turmas Recursais"/>
        <transition to="Término" name="Término"/>
        <transition to="(TUJ) Autos recebidos das Turmas Recursais - ANALISAR" name="(TUJ) Autos recebidos das Turmas Recursais - ANALISAR"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
