<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Cumprimento de decisão">
    <description><![CDATA[Código do fluxo: SG_CUMPRIDEC

Descrição: Cumprimento de decisões judiciais.

Raia        Localização              Papel
Secretaria  Secretaria Segundo Grau  Chefe de Secretaria
Secretaria  Secretaria Segundo Grau  Servidor Geral]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('602:1338,602:5483')}" actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (SG) Cumprimento de decisão">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:-1')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="(SG) Separação em cumprimento de decisão" name="(SG) Separação em cumprimento de decisão"/>
    </start-state>  
    <!-- NODES -->
    <fork name="(SG) Separação em cumprimento de decisão">
        <transition to="(SG) É apensar ou desapensar?" name="(SG) É apensar ou desapensar?"/>
        <transition to="(SG) É certificar decurso de prazo?" name="(SG) É certificar decurso de prazo?"/>
        <transition to="(SG) É certificar trânsito em julgado?" name="(SG) É certificar trânsito em julgado?"/>
        <transition to="(SG) É intimação ou citação genérica?" name="(SG) É intimação ou citação genérica?"/>
        <transition to="(SG) É intimação ou citação ao MP?" name="(SG) É intimação ou citação ao MP?"/>
        <transition to="(SG) É expedir carta?" name="(SG) É expedir carta?"/>
        <transition to="(SG) É expedir mandado?" name="(SG) É expedir mandado?"/>
        <transition to="(SG) É expedir alvará?" name="(SG) É expedir alvará?"/>
        <transition to="(SG) É expedir ofício?" name="(SG) É expedir ofício?"/>
        <transition to="(SG) É encerrar expediente manualmente?" name="(SG) É encerrar expediente manualmente?"/>
        <transition to="(SG) É retificar tipo de documento?" name="(SG) É retificar tipo de documento?"/>
        <transition to="(SG) É expedir outros documentos?" name="(SG) É expedir outros documentos?"/>
        <transition to="(SG) É publicar no DJe?" name="(SG) É publicar no DJe?"/>
    </fork>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_apensar_desapensar') == true ? '(SG) Apensamento ou desapensamento - ANALISAR' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É apensar ou desapensar?">
        <transition to="(SG) Apensamento ou desapensamento - ANALISAR" name="(SG) Apensamento ou desapensamento - ANALISAR"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Apensamento ou desapensamento - ANALISAR">
        <task name="(SG) Apensamento ou desapensamento - ANALISAR" swimlane="Secretaria">
            <controller>
                <variable name="Processo_Fluxo_associarProcessos" mapped-name="frame:Processo_Fluxo_associarProcessos" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: Processo_Fluxo_associarProcessos
   Label: Associar processo
   Escrita: Sim
   Obrig.: Não
   Tipo: Frame]]></description>
        <transition to="Nó de Desvio - (SG) Cumprimento de decisão" name="Nó de Desvio - (SG) Cumprimento de decisão">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Junção em cumprimento de decisão" name="Concluir e sair da tarefa"/>
    </task-node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_certificar_decurso_prazo') == true ? '(SG) Expedição de certidão de decurso de prazo' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É certificar decurso de prazo?">
        <transition to="(SG) Expedição de certidão de decurso de prazo" name="(SG) Expedição de certidão de decurso de prazo"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Expedição de certidão de decurso de prazo">
        <sub-process name="(SG) Expedição de documentos" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:certidao_decurso_prazo', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:certidao_transito_julgado', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:alvara', false)}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:certidao_decurso_prazo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:alvara')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:certidao_transito_julgado')}"/>
        </event>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_certificar_transito_julgado') == true ? '(SG) Expedição de certidão de trânsito em julgado' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É certificar trânsito em julgado?">
        <transition to="(SG) Expedição de certidão de trânsito em julgado" name="(SG) Expedição de certidão de trânsito em julgado"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Expedição de certidão de trânsito em julgado">
        <sub-process name="(SG) Expedição de documentos" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:certidao_transito_julgado', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:alvara', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:certidao_decurso_prazo', false)}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:certidao_transito_julgado')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:alvara')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:certidao_decurso_prazo')}"/>
        </event>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_intimar_citar') == true ? '(SG) Expedição de intimação ou citação' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É intimação ou citação genérica?">
        <transition to="(SG) Expedição de intimação ou citação" name="(SG) Expedição de intimação ou citação"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Expedição de intimação ou citação">
        <sub-process name="(SG) Preparar Ato de Comunicação" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:pac:intimar_citar', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:pac:intimar_citar_mp', false)}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:pac:intimar_citar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:pac:intimar_citar_mp')}"/>
        </event>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_intimar_citar_mp') == true ? '(SG) Expedição de intimação ou citação ao MP' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É intimação ou citação ao MP?">
        <transition to="(SG) Expedição de intimação ou citação ao MP" name="(SG) Expedição de intimação ou citação ao MP"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Expedição de intimação ou citação ao MP">
        <sub-process name="(SG) Preparar Ato de Comunicação" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:pac:intimar_citar_mp', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:pac:intimar_citar', false)}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:pac:intimar_citar_mp')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:pac:intimar_citar')}"/>
        </event>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_expedir_carta') == true ? '(SG) Expedição de carta de ordem, precatória e(ou) rogatória' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É expedir carta?">
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <transition to="(SG) Expedição de carta de ordem, precatória e(ou) rogatória" name="(SG) Expedição de carta de ordem, precatória e(ou) rogatória"/>
    </decision>
    <process-state name="(SG) Expedição de carta de ordem, precatória e(ou) rogatória">
        <sub-process name="(SG) Preparar Ato de Comunicação de Carta" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_expedir_mandado') == true ? '(SG) Expedição de mandado' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É expedir mandado?">
        <transition to="(SG) Expedição de mandado" name="(SG) Expedição de mandado"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Expedição de mandado">
        <sub-process name="(SG) Preparar Ato de Comunicação de Mandado" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_expedir_alvara') == true ? '(SG) Expedição de alvará' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É expedir alvará?">
        <transition to="(SG) Expedição de alvará" name="(SG) Expedição de alvará"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Expedição de alvará">
        <sub-process name="(SG) Expedição de documentos" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:alvara', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:certidao_transito_julgado', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:expdoc:certidao_decurso_prazo', false)}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:alvara')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:certidao_transito_julgado')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:expdoc:certidao_decurso_prazo')}"/>
        </event>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_expedir_oficio') == true ? '(SG) Expedição de ofício' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É expedir ofício?">
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <transition to="(SG) Expedição de ofício" name="(SG) Expedição de ofício"/>
    </decision>
    <process-state name="(SG) Expedição de ofício">
        <sub-process name="(SG) Preparar Ato de Comunicação de Ofício" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_encerrar_expediente') == true ? '(SG) Expedientes - ENCERRAR' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É encerrar expediente manualmente?">
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <transition to="(SG) Expedientes - ENCERRAR" name="(SG) Expedientes - ENCERRAR"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Expedientes - ENCERRAR">
        <task name="(SG) Expedientes - ENCERRAR" swimlane="Secretaria">
            <controller>
                <variable name="WEB-INF_xhtml_flx_exped_encerrarExpedienteManual" mapped-name="frame:WEB-INF_xhtml_flx_exped_encerrarExpedienteManual" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: WEB-INF_xhtml_flx_exped_encerrarExpedienteManual
   Label: Encerrar expediente manualmente
   Escrita: Sim
   Obrig.: Não
   Tipo: Frame]]></description>
        <transition to="(SG) Junção em cumprimento de decisão" name="Prosseguir e sair da tarefa"/>
        <transition to="Nó de Desvio - (SG) Cumprimento de decisão" name="Nó de Desvio - (SG) Cumprimento de decisão">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{taskInstanceUtil.deleteVariableLocally('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_retificar_tipo_documento') == true ? '(SG) Tipo de documento - RETIFICAR' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É retificar tipo de documento?">
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
        <transition to="(SG) Tipo de documento - RETIFICAR" name="(SG) Tipo de documento - RETIFICAR"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Tipo de documento - RETIFICAR">
        <task name="(SG) Tipo de documento - RETIFICAR" swimlane="Secretaria">
            <controller>
                <variable name="Processo_Fluxo_documento_reclassificar" mapped-name="frame:Processo_Fluxo_documento_reclassificar" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: Processo_Fluxo_documento_reclassificar
   Label: Retificar tipo de documento
   Escrita: Sim
   Obrig.: Não
   Tipo: Frame]]></description>
        <transition to="(SG) Junção em cumprimento de decisão" name="Cancelar e sair da tarefa"/>
        <transition to="Nó de Desvio - (SG) Cumprimento de decisão" name="Nó de Desvio - (SG) Cumprimento de decisão">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:reclassificarDocumento:idsTipoDocumentoProibidoAlterar','79,64,63')}"/>
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('Cancelar e sair da tarefa')}"/>
        </event>
        <event type="task-end">
            <action expression="#{taskInstanceUtil.deleteVariableLocally('mostrarBotaoGravarNoFluxo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:reclassificarDocumento:idsTipoDocumentoProibidoAlterar')}"/>
            <action expression="#{taskInstanceUtil.deleteVariableLocally('frameDefaultLeavingTransition')}"/>
        </event>
    </task-node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_expedir_outros_documentos') == true ? '(SG) Expedição de outros documentos' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É expedir outros documentos?">
        <transition to="(SG) Expedição de outros documentos" name="(SG) Expedição de outros documentos"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Expedição de outros documentos">
        <sub-process name="(SG) Expedição de outros documentos" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </process-state>
    <join name="(SG) Junção em cumprimento de decisão">
        <transition to="Término" name="Término"/>
    </join>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg_fbg_publicar_dje') == true ? '(SG) Preparar publicação no DJe' : '(SG) Junção em cumprimento de decisão'}" name="(SG) É publicar no DJe?">
        <transition to="(SG) Preparar publicação no DJe" name="(SG) Preparar publicação no DJe"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </decision>
    <process-state name="(SG) Preparar publicação no DJe">
        <sub-process name="(SG) Publicação no DJe" binding="late"/>
        <transition to="(SG) Junção em cumprimento de decisão" name="(SG) Junção em cumprimento de decisão"/>
    </process-state>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Cumprimento de decisão">
        <task name="Nó de Desvio - (SG) Cumprimento de decisão" swimlane="Nó de Desvio - (SG) Cumprimento de decisão"/>
        <transition to="Término" name="Término"/>
        <transition to="(SG) Apensamento ou desapensamento - ANALISAR" name="(SG) Apensamento ou desapensamento - ANALISAR"/>
        <transition to="(SG) Expedientes - ENCERRAR" name="(SG) Expedientes - ENCERRAR"/>
        <transition to="(SG) Tipo de documento - RETIFICAR" name="(SG) Tipo de documento - RETIFICAR"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
