<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Expedição de certidão de conclusão sem efeito">
    <description><![CDATA[Código do fluxo: SG_ECCSE

Descrição: Expedição de certidão de conclusão sem efeito, para retirada de concluso dispensando assinatura pelo magistrado..

Raia        Localização              Papel
Assessoria  Assessoria Segundo Grau  Assessor]]></description>
    <!-- SWIMLANES -->
    <swimlane name="Assessoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('600:5197')}" actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (SG) Expedição de certidão de conclusão sem efeito">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:-1')}"/>
    </swimlane>
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Assessoria"/>
        <transition to="(SG) Certidão de conclusão sem efeito - EXPEDIR" name="(SG) Certidão de conclusão sem efeito - EXPEDIR"/>
    </start-state>
    <!-- NODES -->
    <task-node end-tasks="true" name="(SG) Certidão de conclusão sem efeito - EXPEDIR">
        <task name="(SG) Certidão de conclusão sem efeito - EXPEDIR" swimlane="Assessoria">
            <controller>
                <variable name="certidao_sem_efeito_em_elaboracao" mapped-name="textEditSignature:certidao_sem_efeito_em_elaboracao" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: certidao_sem_efeito_em_elaboracao
   Label: Certidão sem efeito em elaboração
   Escrita: Sim
   Obrig.: Não
   Tipo: Editor com Assinatura]]></description>
        <transition to="Nó de Desvio - (SG) Expedição de certidão de conclusão sem efeito" name="Nó de Desvio - (SG) Expedição de certidão de conclusão sem efeito">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Remover certidão não assinar e sinalizar cancelamento" name="Cancelar e retornar para minuta"/>
        <transition to="(SG) Lançar movimento de juntada de certidão" name="(SG) Lançar movimento de juntada de certidão">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('(SG) Lançar movimento de juntada de certidão')}"/>
        </event>
        <event type="task-start">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds','57')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos','Cancelar e retornar para minuta')}"/>
        </event>
    </task-node>
    <node name="(SG) Lançar movimento de juntada de certidão">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(60).associarAoDocumento(processoDocumentoManager.getUltimoProcessoDocumentoAssinado(tipoProcessoDocumentoManager.findByCodigoDocumento('4050014'), tramitacaoProcessualService.recuperaProcesso().processo)).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(200001).lancarMovimento()}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:eccse:assinou_certidao_sem_efeito', true)}"/>
        </event>
    </node>
    <node name="(SG) Remover certidão não assinar e sinalizar cancelamento">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('sg:eccse:assinou_certidao_sem_efeito', false)}"/>
            <action expression="${documentoJudicialService.removerDocumentoAPartirDeVariavalDeFluxo('certidao_sem_efeito_em_elaboracao')}"/>
        </event>
    </node>
    <end-state name="Término">
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('certidao_sem_efeito_em_elaboracao')}"/>
        </event>
    </end-state>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Expedição de certidão de conclusão sem efeito">
        <task name="Nó de Desvio - (SG) Expedição de certidão de conclusão sem efeito" swimlane="Nó de Desvio - (SG) Expedição de certidão de conclusão sem efeito"/>
        <transition to="Término" name="Término"/>
        <transition to="(SG) Certidão de conclusão sem efeito - EXPEDIR" name="(SG) Certidão de conclusão sem efeito - EXPEDIR"/>
    </task-node>
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
</process-definition>
