<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Controle de prazos">
    <description><![CDATA[Código do fluxo: SG_CONTPRAZOS

Descrição: Controle de prazos de intimações e citações.

Raia        Localização              Papel
Secretaria  Secretaria Segundo Grau  Chefe de Secretaria
Secretaria  Secretaria Segundo Grau  Servidor Geral]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (SG) Controle de prazos">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:-1')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('602:1338,602:5483')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="(SG) Existe intimação ou citação via correios pendente de ciência?" name="(SG) Existe intimação ou citação via correios pendente de ciência?"/>
    </start-state>  
    <!-- NODES -->
    <decision expression="#{entityManager.createQuery(&quot;SELECT COUNT(*) FROM ProcessoParteExpediente AS ppe JOIN ppe.processoExpediente AS pe WHERE ppe.processoJudicial.idProcessoTrf = :idProcessoTrf AND ppe.pessoaParte.idPessoa != 4266 AND pe.tipoProcessoDocumento.idTipoProcessoDocumento != 34 AND pe.meioExpedicaoExpediente = 'C' AND ppe.dtCienciaParte IS NULL AND ppe.fechado = false AND NOT EXISTS(SELECT 1 FROM SituacaoProcesso AS sp WHERE sp.idProcesso = ppe.processoJudicial.idProcessoTrf AND sp.nomeTarefa = '(SG) Intimação ou citação pendente de AR - AGUARDAR')&quot;).setParameter(&quot;idProcessoTrf&quot;, tramitacaoProcessualService.recuperaProcesso().idProcessoTrf).getSingleResult() &gt; 0 ? '(SG) Intimação ou citação pendente de AR - AGUARDAR' : '(SG) Separação em intimação ou citação com ou sem prazo'}" name="(SG) Existe intimação ou citação via correios pendente de ciência?">
        <transition to="(SG) Intimação ou citação pendente de AR - AGUARDAR" name="(SG) Intimação ou citação pendente de AR - AGUARDAR"/>
        <transition to="(SG) Separação em intimação ou citação com ou sem prazo" name="(SG) Separação em intimação ou citação com ou sem prazo"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Intimação ou citação pendente de AR - AGUARDAR">
        <task name="(SG) Intimação ou citação pendente de AR - AGUARDAR" swimlane="Secretaria">
            <controller>
                <variable name="WEB-INF_xhtml_flx_exped_controleCorreios" mapped-name="frame:WEB-INF_xhtml_flx_exped_controleCorreios" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: WEB-INF_xhtml_flx_exped_controleCorreios
   Label: Inserir informação de AR
   Escrita: Sim
   Obrig.: Não
   Tipo: Frame]]></description>
        <transition to="Nó de Desvio - (SG) Controle de prazos" name="Nó de Desvio - (SG) Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Intimação ou citação pendente de AR - REGISTRAR" name="Registrar devolução do AR"/>
        <transition to="Término" name="Cancelar e sair da tarefa"/>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:fluxo:correios:registroCiencia')}"/>
        </event>
        <event type="task-start">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:correios:registroCiencia', false)}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(SG) Intimação ou citação pendente de AR - REGISTRAR">
        <task name="(SG) Intimação ou citação pendente de AR - REGISTRAR" swimlane="Secretaria">
            <controller>
                <variable name="WEB-INF_xhtml_flx_exped_controleCorreios" mapped-name="frame:WEB-INF_xhtml_flx_exped_controleCorreios" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: WEB-INF_xhtml_flx_exped_controleCorreios
   Label: Registrar cumprimento de AR
   Escrita: Sim
   Obrig.: Não
   Tipo: Frame]]></description>
        <transition to="Nó de Desvio - (SG) Controle de prazos" name="Nó de Desvio - (SG) Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Intimação ou citação pendente de AR - AGUARDAR" name="Retornar para aguardar AR"/>
        <transition to="(SG) Separação em intimação ou citação com ou sem prazo" name="Verificar existência de prazo"/>
        <transition to="Término" name="Cancelar e sair da tarefa"/>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:fluxo:correios:edicaoNumeroAR')}"/>
        </event>
        <event type="task-start">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:correios:edicaoNumeroAR',false)}"/>
        </event>
    </task-node>
    <fork name="(SG) Separação em intimação ou citação com ou sem prazo">
        <transition to="(SG) Existe expediente com prazo em aberto?" name="(SG) Existe expediente com prazo em aberto?"/>
        <transition to="(SG) Existe intimação ou citação sem prazo?" name="(SG) Existe intimação ou citação sem prazo?"/>
    </fork>
    <decision expression="#{entityManager.createQuery(&quot;SELECT COUNT(*) FROM ProcessoParteExpediente AS ppe JOIN ppe.processoExpediente AS pe WHERE ppe.processoJudicial.idProcessoTrf = :idProcessoTrf AND ppe.pessoaParte.idPessoa != 4266 AND pe.tipoProcessoDocumento.idTipoProcessoDocumento != 34 AND ppe.tipoPrazo != 'S' AND ppe.fechado = false AND NOT EXISTS(SELECT 1 FROM SituacaoProcesso AS sp WHERE sp.idProcesso = ppe.processoJudicial.idProcessoTrf AND sp.nomeTarefa = '(SG) Intimação ou citação com prazo em curso - AGUARDAR')&quot;).setParameter(&quot;idProcessoTrf&quot;, tramitacaoProcessualService.recuperaProcesso().idProcessoTrf).getSingleResult() &gt; 0 ? '(SG) Intimação ou citação com prazo em curso - AGUARDAR' : '(SG) Junção em intimação ou citação com ou sem prazo'}" name="(SG) Existe expediente com prazo em aberto?">
        <transition to="(SG) Intimação ou citação com prazo em curso - AGUARDAR" name="(SG) Intimação ou citação com prazo em curso - AGUARDAR"/>
        <transition to="(SG) Junção em intimação ou citação com ou sem prazo" name="(SG) Junção em intimação ou citação com ou sem prazo"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Intimação ou citação com prazo em curso - AGUARDAR">
        <task name="(SG) Intimação ou citação com prazo em curso - AGUARDAR" swimlane="Secretaria">
            <controller>
                <variable name="label_informacao" mapped-name="textAlert:label_informacao" access="read,write"/>
                <variable name="MovimentarLote" mapped-name="movimentarLote:MovimentarLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: label_informacao
   Label: O processo contém intimação ou citação com prazo em curso. Após o fechamento de todos os prazos que estão abertos, o processo será encaminhado automaticamente para tarefa "(SG) Intimação ou citação com prazo decorrido - ANALISAR".
   Escrita: Sim
   Obrig.: Não
   Tipo: Aviso

2. Variável: MovimentarLote
   Label: Movimentar em lote
   Escrita: Sim
   Obrig.: Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Nó de Desvio - (SG) Controle de prazos" name="Nó de Desvio - (SG) Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Prazos de intimações ou citações continuam em aberto?" name="(SG) Prazos de intimações ou citações continuam em aberto?">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Junção em intimação ou citação com ou sem prazo" name="Cancelar e sair da tarefa"/>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:aguardaPeticao')}"/>
            <action expression="#{taskInstanceUtil.deleteVariableLocally('mostrarBotaoGravarNoFluxo')}"/>
            <action expression="#{taskInstanceUtil.deleteVariableLocally('frameDefaultLeavingTransition')}"/>
        </event>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:aguardaPeticao', true)}"/>
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('(SG) Prazos de intimações ou citações continuam em aberto?')}"/>
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <decision expression="#{entityManager.createQuery(&quot;SELECT COUNT(*) FROM ProcessoParteExpediente AS ppe JOIN ppe.processoExpediente AS pe WHERE ppe.processoJudicial.idProcessoTrf = :idProcessoTrf AND ppe.pessoaParte.idPessoa != 4266 AND pe.tipoProcessoDocumento.idTipoProcessoDocumento != 34 AND ppe.tipoPrazo != 'S' AND ppe.fechado = false&quot;).setParameter(&quot;idProcessoTrf&quot;, tramitacaoProcessualService.recuperaProcesso().idProcessoTrf).getSingleResult() &gt; 0 ? '(SG) Intimação ou citação com prazo em curso - AGUARDAR' : '(SG) Intimação ou citação com prazo decorrido - ANALISAR'}" name="(SG) Prazos de intimações ou citações continuam em aberto?">
        <transition to="(SG) Intimação ou citação com prazo em curso - AGUARDAR" name="(SG) Intimação ou citação com prazo em curso - AGUARDAR"/>
        <transition to="(SG) Intimação ou citação com prazo decorrido - ANALISAR" name="(SG) Intimação ou citação com prazo decorrido - ANALISAR"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Intimação ou citação com prazo decorrido - ANALISAR">
        <task name="(SG) Intimação ou citação com prazo decorrido - ANALISAR" swimlane="Secretaria">
            <controller>
                <variable name="label_informacao" mapped-name="textAlert:label_informacao" access="read,write"/>
                <variable name="MovimentarLote" mapped-name="movimentarLote:MovimentarLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: label_informacao
   Label: Intimação ou citação com prazo decorrido. Clique na próxima ação abaixo para prosseguir.
   Escrita: Sim
   Obrig.: Não
   Tipo: Aviso

2. Variável: MovimentarLote
   Label: Movimentar em lote
   Escrita: Sim
   Obrig.: Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Nó de Desvio - (SG) Controle de prazos" name="Nó de Desvio - (SG) Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Junção em intimação ou citação com ou sem prazo" name="Cancelar e sair da tarefa"/>
        <event type="task-end">
            <action expression="#{taskInstanceUtil.deleteVariableLocally('mostrarBotaoGravarNoFluxo')}"/>
        </event>
        <event type="task-start">
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <decision expression="#{entityManager.createQuery(&quot;SELECT COUNT(*) FROM ProcessoParteExpediente AS ppe JOIN ppe.processoExpediente AS pe WHERE ppe.processoJudicial.idProcessoTrf = :idProcessoTrf AND ppe.pessoaParte.idPessoa != 4266 AND pe.tipoProcessoDocumento.idTipoProcessoDocumento != 34 AND ppe.tipoPrazo = 'S' AND ppe.fechado = false AND NOT EXISTS(SELECT 1 FROM SituacaoProcesso AS sp WHERE sp.idProcesso = ppe.processoJudicial.idProcessoTrf AND sp.nomeTarefa = '(SG) Intimação ou citação sem prazo - AGUARDAR')&quot;).setParameter(&quot;idProcessoTrf&quot;, tramitacaoProcessualService.recuperaProcesso().idProcessoTrf).getSingleResult() &gt; 0 ? '(SG) Intimação ou citação sem prazo - AGUARDAR' : '(SG) Junção em intimação ou citação com ou sem prazo'}" name="(SG) Existe intimação ou citação sem prazo?">
        <transition to="(SG) Junção em intimação ou citação com ou sem prazo" name="(SG) Junção em intimação ou citação com ou sem prazo"/>
        <transition to="(SG) Intimação ou citação sem prazo - AGUARDAR" name="(SG) Intimação ou citação sem prazo - AGUARDAR"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Intimação ou citação sem prazo - AGUARDAR">
        <task name="(SG) Intimação ou citação sem prazo - AGUARDAR" swimlane="Secretaria">
            <controller>
                <variable name="label_informacao" mapped-name="textAlert:label_informacao" access="read,write"/>
                <variable name="MovimentarLote" mapped-name="movimentarLote:MovimentarLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: label_informacao
   Label: O processo encontra-se com intimação ou citação sem prazo. Mantenha-o nesta tarefa caso queira aguardar a resposta ou clique na próxima ação abaixo para cancelar e sair da tarefa.
   Escrita: Sim
   Obrig.: Não
   Tipo: Aviso

2. Variável: MovimentarLote
   Label: Movimentar em lote
   Escrita: Sim
   Obrig.: Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Nó de Desvio - (SG) Controle de prazos" name="Nó de Desvio - (SG) Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Junção em intimação ou citação com ou sem prazo" name="Cancelar e sair da tarefa"/>
        <transition to="(SG) Intimação ou citação sem prazo continua aberto?" name="(SG) Intimação ou citação sem prazo continua aberto?">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:aguardaPeticao')}"/>
            <action expression="#{taskInstanceUtil.deleteVariableLocally('mostrarBotaoGravarNoFluxo')}"/>
            <action expression="#{taskInstanceUtil.deleteVariableLocally('frameDefaultLeavingTransition')}"/>
        </event>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:aguardaPeticao', true)}"/>
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('(SG) Intimação ou citação sem prazo continua aberto?')}"/>
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <decision expression="#{entityManager.createQuery(&quot;SELECT COUNT(*) FROM ProcessoParteExpediente AS ppe JOIN ppe.processoExpediente AS pe WHERE ppe.processoJudicial.idProcessoTrf = :idProcessoTrf AND ppe.pessoaParte.idPessoa != 4266 AND pe.tipoProcessoDocumento.idTipoProcessoDocumento != 34 AND ppe.tipoPrazo = 'S' AND ppe.fechado = false&quot;).setParameter(&quot;idProcessoTrf&quot;, tramitacaoProcessualService.recuperaProcesso().idProcessoTrf).getSingleResult() &gt; 0 ? '(SG) Intimação ou citação sem prazo - AGUARDAR' : '(SG) Intimação ou citação sem prazo e fechado - ANALISAR'}" name="(SG) Intimação ou citação sem prazo continua aberto?">
        <transition to="(SG) Intimação ou citação sem prazo - AGUARDAR" name="(SG) Intimação ou citação sem prazo - AGUARDAR"/>
        <transition to="(SG) Intimação ou citação sem prazo e fechado - ANALISAR" name="(SG) Intimação ou citação sem prazo e fechado - ANALISAR"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Intimação ou citação sem prazo e fechado - ANALISAR">
        <task name="(SG) Intimação ou citação sem prazo e fechado - ANALISAR" swimlane="Secretaria">
            <controller>
                <variable name="label_informacao" mapped-name="textAlert:label_informacao" access="read,write"/>
                <variable name="MovimentarLote" mapped-name="movimentarLote:MovimentarLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: label_informacao
   Label: Intimação ou citação com prazos fechados. Clique na próxima ação para prosseguir.
   Escrita: Sim
   Obrig.: Não
   Tipo: Aviso

2. Variável: MovimentarLote
   Label: Movimentar em lote
   Escrita: Sim
   Obrig.: Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="(SG) Junção em intimação ou citação com ou sem prazo" name="Cancelar e sair da tarefa"/>
        <transition to="Nó de Desvio - (SG) Controle de prazos" name="Nó de Desvio - (SG) Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-end">
            <action expression="#{taskInstanceUtil.deleteVariableLocally('mostrarBotaoGravarNoFluxo')}"/>
        </event>
        <event type="task-start">
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <join name="(SG) Junção em intimação ou citação com ou sem prazo">
        <transition to="Término" name="Término"/>
    </join>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Controle de prazos">
        <task name="Nó de Desvio - (SG) Controle de prazos" swimlane="Nó de Desvio - (SG) Controle de prazos"/>
        <transition to="Término" name="Término"/>
        <transition to="(SG) Intimação ou citação com prazo em curso - AGUARDAR" name="(SG) Intimação ou citação com prazo em curso - AGUARDAR"/>
        <transition to="(SG) Intimação ou citação com prazo decorrido - ANALISAR" name="(SG) Intimação ou citação com prazo decorrido - ANALISAR"/>
        <transition to="(SG) Intimação ou citação sem prazo - AGUARDAR" name="(SG) Intimação ou citação sem prazo - AGUARDAR"/>
        <transition to="(SG) Intimação ou citação sem prazo e fechado - ANALISAR" name="(SG) Intimação ou citação sem prazo e fechado - ANALISAR"/>
        <transition to="(SG) Intimação ou citação pendente de AR - AGUARDAR" name="(SG) Intimação ou citação pendente de AR - AGUARDAR"/>
        <transition to="(SG) Intimação ou citação pendente de AR - REGISTRAR" name="(SG) Intimação ou citação pendente de AR - REGISTRAR"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
