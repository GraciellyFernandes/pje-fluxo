<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Preparar Ato Judicial">
    <description><![CDATA[Código do fluxo: SG_PAJ

Descrição: Fluxo destinado ao controle de atos judicias....]]></description>
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (SG) Preparar Ato Judicial">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:-1')}"/>
    </swimlane>
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to="(SG) Concluso para decisão?" name="(SG) Concluso para decisão?"/>
    </start-state>
    <!-- NODES -->
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg:paj:decisao') ? '(SG) Lançar movimento conclusos para decisão' : '(SG) Concluso para despacho?'}" name="(SG) Concluso para decisão?">
        <transition to="(SG) Concluso para despacho?" name="(SG) Concluso para despacho?"/>
        <transition to="(SG) Lançar movimento conclusos para decisão" name="(SG) Lançar movimento conclusos para decisão"/>
    </decision>
    <node name="(SG) Lançar movimento conclusos para decisão">
        <transition to="(SG) Concluso para decisão de urgência inicial?" name="(SG) Concluso para decisão de urgência inicial?"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(51).comComplementoDeCodigo(3).doTipoDominio().preencherComElementoDeCodigo(6).lancarMovimento()}"/>
        </event>
    </node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg:paj:decisao_urgencia_inicial') ? '(SG) Preparação de decisão de urgência inicial' : 'Término'}" name="(SG) Concluso para decisão de urgência inicial?">
        <transition to="(SG) Preparação de decisão de urgência inicial" name="(SG) Preparação de decisão de urgência inicial"/>
        <transition to="Término" name="Término"/>
    </decision>
    <process-state name="(SG) Preparação de decisão de urgência inicial">
        <sub-process name="(SG) Preparar Ato Judicial de Decisão de Urgência Inicial" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg:paj:despacho') ? '(SG) Lançar movimento conclusos para despacho' : 'Término'}" name="(SG) Concluso para despacho?">
        <transition to="Término" name="Término"/>
        <transition to="(SG) Lançar movimento conclusos para despacho" name="(SG) Lançar movimento conclusos para despacho"/>
    </decision>
    <node name="(SG) Lançar movimento conclusos para despacho">
        <transition to="(SG) Concluso para despacho inicial?" name="(SG) Concluso para despacho inicial?"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(51).comComplementoDeCodigo(3).doTipoDominio().preencherComElementoDeCodigo(5).lancarMovimento()}"/>
        </event>
    </node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('sg:paj:despacho_inicial') ? '(SG) Preparação de despacho inicial' : 'Término'}" name="(SG) Concluso para despacho inicial?">
        <transition to="(SG) Preparação de despacho inicial" name="(SG) Preparação de despacho inicial"/>
        <transition to="Término" name="Término"/>
    </decision>
    <process-state name="(SG) Preparação de despacho inicial">
        <sub-process name="(SG) Preparar Ato Judicial de Despacho Inicial" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <end-state name="Término">
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minuta_ato_judicial')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minutaEmElaboracao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('condicaoLancamentoMovimentosTemporario')}"/>
        </event>
    </end-state>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Preparar Ato Judicial">
        <task name="Nó de Desvio - (SG) Preparar Ato Judicial" swimlane="Nó de Desvio - (SG) Preparar Ato Judicial"/>
        <transition to="Término" name="Término"/>
    </task-node>
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
</process-definition>
