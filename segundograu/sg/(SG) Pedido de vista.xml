<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Pedido de vista">
    <description><![CDATA[Código do fluxo: SG_PED_VISTA

Descrição: Fluxo destinado à análise de pedido de vista.

Raia        Localização              Papel
Magistrado  Assessoria Segundo Grau  Assessoria
            Assessoria Segundo Grau  Assessor Chefe
            Gabinete Segundo Grau    Magistrado
            Assessoria               Assessor
            Gabinete               Magistrado
            Assessoria Segundo Grau  Assessor Geral]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Magistrado">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('600:5197,599:1469,600:5898,600:5899,5:5197,6:1469,600:5907')}" actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (SG) Pedido de vista">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Magistrado"/>
        <transition to="(SG) Descolcar fluxo de vista" name="(SG) Descolcar fluxo de vista"/>
    </start-state>  
    <!-- NODES -->
    <node name="(SG) Descolcar fluxo de vista">
        <transition to="(SG) Pedido de vista - ANALISAR" name="(SG) Pedido de vista - ANALISAR"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.deslocarFluxoParaOrgaoVista()}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(SG) Pedido de vista - ANALISAR">
        <task name="(SG) Pedido de vista - ANALISAR" swimlane="Magistrado">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: aviso
   Label: Neste processo consta um pedido de vista referente à última sessão de julgamento. Analise os autos disponibilizados nas pastas compartilhadas para essa finalidade e, ao término da análise, encaminhe o processo à próxima sessão de julgamento.
   Escrita: Sim
   Obrig.: Não
   Tipo: Aviso]]></description>
        <transition to="Nó de Desvio - (SG) Pedido de vista" name="Nó de Desvio - (SG) Pedido de vista">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Finalizar e sair da tarefa"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Pedido de vista">
        <task name="Nó de Desvio - (SG) Pedido de vista" swimlane="Nó de Desvio - (SG) Pedido de vista"/>
        <transition to="Término" name="Término"/>
        <transition to="(SG) Pedido de vista - ANALISAR" name="(SG) Pedido de vista - ANALISAR"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS -->
    <action name="upd" expression="#{sessaoHome.setInstance(null)}"/> 
</process-definition>