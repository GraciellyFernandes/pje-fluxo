<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(VCiv) Controle do CEJUSC">
    <description><![CDATA[Fluxo responsável pelo controle de processos enviados para conciliação no CEJUSC..]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (VCiv) Controle do CEJUSC">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,6:1469,6:5197')}"/>
    </swimlane>
    <swimlane name="CEJUSC">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:5886,5:1338')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to="(CEJUSC) Designar audiência" name="(CEJUSC) Designar audiência"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(CEJUSC) Designar audiência">
        <task name="(CEJUSC) Designar audiência" swimlane="CEJUSC">
            <controller>
                <variable name="Processo_Fluxo_abaDesignarAudiencia" mapped-name="frame:Processo_Fluxo_abaDesignarAudiencia" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Análise do CEJUSC" name="Elaborar Documentos/Expedientes ou devolver autos à secretaria"/>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Análise do CEJUSC">
        <task name="(CEJUSC) Análise do CEJUSC" swimlane="CEJUSC">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Autos devolvidos pelo CEJUSC" name="Devolver autos à secretaria"/>
        <transition to="(CEJUSC) Realizar audiência" name="Realizar audiência">
            <condition expression="#{processoJudicialManager.getProximaAudienciaDesignada(tramitacaoProcessualService.recuperaProcesso()) != null}"/>
        </transition>
        <transition to="(CEJUSC) Designar audiência" name="Designar audiência">
            <condition expression="#{processoJudicialManager.getProximaAudienciaDesignada(tramitacaoProcessualService.recuperaProcesso()) == null}"/>
        </transition>
        <transition to="(CEJUSC) Elaborar documento" name="Elaborar documento"/>
        <transition to="(CEJUSC) Intimar da audiência" name="Intimar da audiência"/>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Autos devolvidos pelo CEJUSC">
        <task name="(CEJUSC) Autos devolvidos pelo CEJUSC" swimlane="Secretaria"/>
        <transition to="Término" name="Finalizar e sair da tarefa"/>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Realizar audiência">
        <task name="(CEJUSC) Realizar audiência" swimlane="CEJUSC">
            <controller>
                <variable name="Processo_Fluxo_abaDesignarAudiencia" mapped-name="frame:Processo_Fluxo_abaDesignarAudiencia" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Análise do CEJUSC" name="Cancelar e sair da tarefa"/>
        <transition to="(CEJUSC) Realização da audiência" name="Informar dados da audiência"/>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Intimar da audiência">
        <task name="(CEJUSC) Intimar da audiência" swimlane="CEJUSC">
            <controller>
                <variable name="Processo_Fluxo_prepararExpediente" mapped-name="frame:Processo_Fluxo_prepararExpediente" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Análise do CEJUSC" name="Cancelar e sair da tarefa"/>
        <transition to="(CEJUSC) Separação preparação intimação" name="(CEJUSC) Separação preparação intimação">
            <condition expression="#{true}"/>
        </transition>
        <event type="node-enter">
            <action name="upd" expression="#{modeloDocumento.set('Processo_Fluxo_prepararExpediente',80)}"/>
        </event>
        <event type="task-create">
            <action name="upd" expression="#{taskInstanceUtil.setFrameDefaultTransition('(CEJUSC) Separação preparação intimação')}"/>
            <action name="upd" expression="#{taskInstanceUtil.setVariable('tiposDisponiveisIds','60,69,65,71')}"/>
            <action name="upd" expression="#{preparaAtoComunicacaoAction.setMeiosComunicacao('E,C,S,D,M,L,N,T')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Processo com prazo em curso">
        <task name="(CEJUSC) Processo com prazo em curso" swimlane="CEJUSC"/>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Processo com prazo decorrido" name="Processo com prazo decorrido">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Análise do CEJUSC" name="Cancelar e sair da tarefa"/>
        <transition to="(CEJUSC) Prazos continuam abertos ?" name="Verificar se há prazo em aberto"/>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('Processo com prazo decorrido')}"/>
            <action expression="#{taskInstanceUtil.setVariable('pje:aguardaPeticao', 'true')}"/>
        </event>
        <event type="task-end">
            <action expression="#{taskInstanceUtil.deleteVariableLocally('pje:aguardaPeticao')}"/>
        </event>
    </task-node>
    <decision expression="#{atoComunicacaoService.getAtosComunicacaoAbertos(processoJudicialService.findById(org.jboss.seam.bpm.processInstance.contextInstance.getVariable('processo'))) &gt; 0 ? 'Processo com prazo em curso' : 'Processo com prazo decorrido'}" name="(CEJUSC) Prazos continuam abertos ?">
        <transition to="(CEJUSC) Processo com prazo em curso" name="Processo com prazo em curso"/>
        <transition to="(CEJUSC) Processo com prazo decorrido" name="Processo com prazo decorrido"/>
    </decision>
    <task-node end-tasks="true" name="(CEJUSC) Processo com prazo decorrido">
        <task name="(CEJUSC) Processo com prazo decorrido" swimlane="CEJUSC"/>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Análise do CEJUSC" name="Cancelar e sair da tarefa"/>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Elaborar documento">
        <task name="(CEJUSC) Elaborar documento" swimlane="CEJUSC">
            <controller>
                <variable name="minutaEmElaboracao" mapped-name="textEditSignature:minutaEmElaboracao" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) É ofício ?" name="É ofício ?">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Remover documento temporário cejusc" name="Finalizar e sair da tarefa"/>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('É ofício ?')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{not empty processoHome.idProcessoDocumento ? org.jboss.seam.bpm.processInstance.contextInstance.setVariable('minutaEmElaboracao', processoHome.idProcessoDocumento) : ''}"/>
        </event>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds','34,57')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos', 'Finalizar e sair da tarefa')}"/>
        </event>
    </task-node>
    <decision expression="#{processoDocumentoManager.getProcessoDocumento(tramitacaoProcessualService.recuperaProcesso().getNumeroProcesso(),null, papelDAO.findByCodeName('admin'),null).get(0).getTipoProcessoDocumento().getIdTipoProcessoDocumento() == 34 ? '(CEJUSC) Lançar movimentação ofício' : '(CEJUSC) Lançar movimentação certidão'}" name="(CEJUSC) É ofício ?">
        <transition to="(CEJUSC) Lançar movimentação ofício" name="(CEJUSC) Lançar movimentação ofício"/>
        <transition to="(CEJUSC) Lançar movimentação certidão" name="(CEJUSC) Lançar movimentação certidão"/>
    </decision>
    <node name="(CEJUSC) Lançar movimentação certidão">
        <transition to="(CEJUSC) Imprimir Documento" name="(CEJUSC) Imprimir Documento"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(60).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(107).lancarMovimento()}"/>
        </event>
    </node>
    <node name="(CEJUSC) Lançar movimentação ofício">
        <transition to="(CEJUSC) Imprimir Documento" name="(CEJUSC) Imprimir Documento"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(60).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(79).lancarMovimento()}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(CEJUSC) Assinar documento">
        <task name="(CEJUSC) Assinar documento" swimlane="CEJUSC">
            <controller>
                <variable name="Processo_Fluxo_revisarMinuta" mapped-name="frame:Processo_Fluxo_revisarMinuta" access="read,write"/>
                <variable name="AssinaturaEmLote" mapped-name="assinarLote:AssinaturaEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="(CEJUSC) Análise do CEJUSC" name="Finalizar e sair">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Imprimir Documento" name="Imprimir Documento">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('Imprimir Documento')}"/>
        </event>
        <event type="task-start">
            <action expression="#{tipoDocumento.set('Processo_Fluxo_revisarMinuta',34,57)}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Imprimir Documento">
        <task name="(CEJUSC) Imprimir Documento" swimlane="CEJUSC">
            <controller>
                <variable name="Processo_ConsultaProcesso_Detalhe_detalheProcessoVisualizacao" mapped-name="page:Processo_ConsultaProcesso_Detalhe_detalheProcessoVisualizacao" access="read,write"/>
            </controller>
        </task>
        <transition to="(CEJUSC) Análise do CEJUSC" name="Finalizar e sair da tarefa"/>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
        <task name="Nó de Desvio - (VCiv) Controle do CEJUSC" swimlane="Nó de Desvio - (VCiv) Controle do CEJUSC"/>
        <transition to="Término" name="Término"/>
        <transition to="(CEJUSC) Designar audiência" name="(CEJUSC) Designar audiência"/>
        <transition to="(CEJUSC) Análise do CEJUSC" name="(CEJUSC) Análise do CEJUSC"/>
        <transition to="(CEJUSC) Intimar da audiência" name="(CEJUSC) Intimar da audiência"/>
        <transition to="(CEJUSC) Elaborar documento" name="(CEJUSC) Elaborar documento"/>
        <transition to="(CEJUSC) Processo com prazo em curso" name="(CEJUSC) Processo com prazo em curso"/>
        <transition to="(CEJUSC) Processo com prazo decorrido" name="(CEJUSC) Processo com prazo decorrido"/>
        <transition to="(CEJUSC) Realizar audiência" name="(CEJUSC) Realizar audiência"/>
        <transition to="(CEJUSC) Autos devolvidos pelo CEJUSC" name="(CEJUSC) Autos devolvidos pelo CEJUSC"/>
        <transition to="(CEJUSC) Assinar documento" name="(CEJUSC) Assinar documento"/>
        <transition to="(CEJUSC) Imprimir Documento" name="(CEJUSC) Imprimir Documento"/>
        <transition to="(CEJUSC) Informar conteúdo DJe" name="(CEJUSC) Informar conteúdo DJe"/>
        <transition to="(CEJUSC) Ignorar conteúdo DJe" name="(CEJUSC) Ignorar conteúdo DJe"/>
        <transition to="(CEJUSC) Confirmar conteúdo DJe" name="(CEJUSC) Confirmar conteúdo DJe"/>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Informar conteúdo DJe">
        <task name="(CEJUSC) Informar conteúdo DJe" swimlane="CEJUSC">
            <controller>
                <variable name="Aviso1" mapped-name="textAlert:Aviso1" access="read,write"/>
                <variable name="Aviso2" mapped-name="textAlert:Aviso2" access="read,write"/>
                <variable name="Aviso3" mapped-name="textAlert:Aviso3" access="read,write"/>
                <variable name="vciv_label_magistrado_dje" mapped-name="textAlert:vciv_label_magistrado_dje" access="read,write"/>
                <variable name="vciv_magistrado_dje" mapped-name="combo_objetos:vciv_magistrado_dje" access="read,write"/>
                <variable name="vciv_conteudo_dje" mapped-name="text:vciv_conteudo_dje" access="read,write"/>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Preencheu conteúdo DJe" name="Prosseguir"/>
        <transition to="(CEJUSC) Ignorar conteúdo DJe" name="Cancelar e sair da tarefa"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv_conteudo_dje')}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('magistrado_dje_temp', tramitacaoProcessualService.recuperaVariavelTarefa('combo_objetos:vciv_magistrado_dje').getIdUsuario())}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('combo_objetos:vciv_magistrado_dje')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('conteudo_dje_temp', tramitacaoProcessualService.strToBase64(tramitacaoProcessualService.recuperaVariavelTarefa('text:vciv_conteudo_dje')))}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('text:vciv_conteudo_dje')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(CEJUSC) Ignorar conteúdo DJe">
        <task name="(CEJUSC) Ignorar conteúdo DJe" swimlane="CEJUSC">
            <controller>
                <variable name="Aviso_DJe" mapped-name="textAlert:Aviso_DJe" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Processo com prazo em curso" name="Sim"/>
        <transition to="(CEJUSC) Informar conteúdo DJe" name="Não"/>
    </task-node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('magistrado_dje_temp') == null || tramitacaoProcessualService.recuperaVariavel('conteudo_dje_temp') == &quot;&quot; ? '(CEJUSC) Informar conteúdo DJe' : '(CEJUSC) Confirmar conteúdo DJe'}" name="(CEJUSC) Preencheu conteúdo DJe">
        <transition to="(CEJUSC) Informar conteúdo DJe" name="(CEJUSC) Informar conteúdo DJe"/>
        <transition to="(CEJUSC) Confirmar conteúdo DJe" name="(CEJUSC) Confirmar conteúdo DJe"/>
    </decision>
    <task-node end-tasks="true" name="(CEJUSC) Confirmar conteúdo DJe">
        <task name="(CEJUSC) Confirmar conteúdo DJe" swimlane="CEJUSC">
            <controller>
                <variable name="Aviso4" mapped-name="textAlert:Aviso4" access="read,write"/>
                <variable name="Aviso5" mapped-name="textAlert:Aviso5" access="read,write"/>
                <variable name="Aviso6" mapped-name="textAlert:Aviso6" access="read,write"/>
                <variable name="Aviso7" mapped-name="textAlert:Aviso7" access="read,write"/>
                <variable name="visualizar_dje" mapped-name="textAlert:visualizar_dje" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Controle do CEJUSC" name="Nó de Desvio - (VCiv) Controle do CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CEJUSC) Informar conteúdo DJe" name="Retornar para ajustar conteúdo"/>
        <transition to="(CEJUSC) Gravar Variáveis DJe" name="Enviar para publicação no DJe"/>
    </task-node>
    <node name="(CEJUSC) Gravar Variáveis DJe">
        <transition to="(CEJUSC) Processo com prazo em curso" name="(CEJUSC) Processo com prazo em curso"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('conteudo_dje', tramitacaoProcessualService.recuperaVariavel('conteudo_dje_temp')) }"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('magistrado_dje', tramitacaoProcessualService.recuperaVariavel('magistrado_dje_temp'))}"/>
            <action expression="#{preencherMovimento.deCodigo(1061).lancarMovimento()}"/>
            <action expression="#{tramitacaoProcessualService.recuperaVariavel('vciv:cumpridec:publicar_dje') ? tramitacaoProcessualService.gravaVariavel('data_dje_direto', dateUtil.getDataAtual('yyyy-MM-dd')) : tramitacaoProcessualService.gravaVariavel('data_dje', dateUtil.getDataAtual('yyyy-MM-dd'))}"/>
            <action expression="#{tramitacaoProcessualService.recuperaVariavel('vciv:cumpridec:publicar_dje') ? tramitacaoProcessualService.gravaVariavel('id_oj_dje_direto', tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador) : tramitacaoProcessualService.gravaVariavel('id_oj_dje', tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador)}"/>
        </event>
    </node>
    <process-state name="(CEJUSC) Realização da audiência">
        <sub-process name="(VCiv) Controle de audiências do CEJUSC" binding="late"/>
        <transition to="(CEJUSC) Análise do CEJUSC" name="(CEJUSC) Análise do CEJUSC"/>
    </process-state>
    <fork name="(CEJUSC) Separação preparação intimação">
        <transition to="(CEJUSC) É correrio ?" name="(CEJUSC) É correrio ?"/>
        <transition to="(CEJUSC) É mandado ?" name="(CEJUSC) É mandado ?"/>
        <transition to="(CEJUSC) É via sistema ?" name="(CEJUSC) É via sistema ?"/>
    </fork>
    <join name="(CEJUSC) Junção preparação intimação">
        <transition to="(CEJUSC) Informar conteúdo DJe" name="(CEJUSC) Informar conteúdo DJe"/>
    </join>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesCorreios().size() &gt; 0 ? '(CEJUSC) Lançar movimento de Expedição de Aviso de Recebimento' : '(CEJUSC) Junção preparação intimação'}" name="(CEJUSC) É correrio ?">
        <transition to="(CEJUSC) Lançar movimento de Expedição de Aviso de Recebimento" name="(CEJUSC) Lançar movimento de Expedição de Aviso de Recebimento"/>
        <transition to="(CEJUSC) Junção preparação intimação" name="(CEJUSC) Junção preparação intimação"/>
    </decision>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesMandados().size() &gt; 0 ? '(CEJUSC) Lançar movimento de Expedição de mandado' : '(CEJUSC) Junção preparação intimação'}" name="(CEJUSC) É mandado ?">
        <transition to="(CEJUSC) Lançar movimento de Expedição de mandado" name="(CEJUSC) Lançar movimento de Expedição de mandado"/>
        <transition to="(CEJUSC) Junção preparação intimação" name="(CEJUSC) Junção preparação intimação"/>
    </decision>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesEletronico().size() &gt; 0 ? '(CEJUSC) Lançar movimento de Expedição Outros documentos' : '(CEJUSC) Junção preparação intimação'}" name="(CEJUSC) É via sistema ?">
        <transition to="(CEJUSC) Lançar movimento de Expedição Outros documentos" name="(CEJUSC) Lançar movimento de Expedição Outros documentos"/>
        <transition to="(CEJUSC) Junção preparação intimação" name="(CEJUSC) Junção preparação intimação"/>
    </decision>
    <node name="(CEJUSC) Lançar movimento de Expedição de Aviso de Recebimento">
        <transition to="(CEJUSC) Junção preparação intimação" name="(CEJUSC) Junção preparação intimação"/>
        <event type="node-enter">
            <action expression="#{comunicacaoProcessualAction.enviarExpedientesLancarMovimentos('C', 'processoExpedienteAtual','#{preencherMovimento.deCodigo(60).associarAoDocumento(processoExpedienteAtual.getProcessoDocumento()).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(74).lancarMovimento()}')}"/>
        </event>
    </node>
    <node name="(CEJUSC) Lançar movimento de Expedição Outros documentos">
        <transition to="(CEJUSC) Junção preparação intimação" name="(CEJUSC) Junção preparação intimação"/>
        <event type="node-enter">
            <action expression="#{comunicacaoProcessualAction.enviarExpedientesLancarMovimentos('E', 'processoExpedienteAtual','#{preencherMovimento.deCodigo(60).associarAoDocumento(processoExpedienteAtual.getProcessoDocumento()).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(80).lancarMovimento()}')}"/>
        </event>
    </node>
    <node name="(CEJUSC) Lançar movimento de Expedição de mandado">
        <transition to="(CEJUSC) Junção preparação intimação" name="(CEJUSC) Junção preparação intimação"/>
        <event type="node-enter">
            <action expression="#{comunicacaoProcessualAction.enviarExpedientesLancarMovimentos('M', 'processoExpedienteAtual','#{preencherMovimento.deCodigo(60).associarAoDocumento(processoExpedienteAtual.getProcessoDocumento()).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(78).lancarMovimento()}')}"/>
        </event>
    </node>
    <node name="(VCiv) Remover documento temporário cejusc">
        <transition to="(CEJUSC) Análise do CEJUSC" name="(CEJUSC) Análise do CEJUSC"/>
        <event type="node-leave">
            <action expression="${documentoJudicialService.removerDocumentoAPartirDeVariavalDeFluxo('minutaEmElaboracao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minutaEmElaboracao')}"/>
        </event>
    </node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>