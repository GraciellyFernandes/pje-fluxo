<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(VCiv) Movimentações PAC">
    <description><![CDATA[Fluxo responsável pelo lançamento de movimentações de comunicação.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (VCiv) Movimentações PAC">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,6:1469,6:5197')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to="(VCiv) Separação preparação intimação" name="(VCiv) Separação preparação intimação"/>
    </start-state>  
    <!-- NODES -->
    <end-state name="Término"/>
    <fork name="(VCiv) Separação preparação intimação">
        <transition to="(VCiv) É correrio ?" name="(VCiv) É correrio ?"/>
        <transition to="(VCiv) É mandado ?" name="(VCiv) É mandado ?"/>
        <transition to="(VCiv) É via sistema ?" name="(VCiv) É via sistema ?"/>
    </fork>
    <join name="(VCiv) Junção preparação intimação">
        <transition to="Término" name="Término"/>
    </join>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesCorreios().size() &gt; 0 ? '(VCiv) Lançar movimento de Expedição de Aviso de Recebimento' : '(VCiv) Junção preparação intimação'}" name="(VCiv) É correrio ?">
        <transition to="(VCiv) Lançar movimento de Expedição de Aviso de Recebimento" name="(VCiv) Lançar movimento de Expedição de Aviso de Recebimento"/>
        <transition to="(VCiv) Junção preparação intimação" name="(VCiv) Junção preparação intimação"/>
    </decision>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesMandados().size() &gt; 0 ? '(VCiv) Lançar movimento de Expedição de mandado' : '(VCiv) Junção preparação intimação'}" name="(VCiv) É mandado ?">
        <transition to="(VCiv) Lançar movimento de Expedição de mandado" name="(VCiv) Lançar movimento de Expedição de mandado"/>
        <transition to="(VCiv) Junção preparação intimação" name="(VCiv) Junção preparação intimação"/>
    </decision>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesEletronico().size() &gt; 0 ? '(VCiv) Lançar movimento de Expedição Outros documentos' : '(VCiv) Junção preparação intimação'}" name="(VCiv) É via sistema ?">
        <transition to="(VCiv) Lançar movimento de Expedição Outros documentos" name="(VCiv) Lançar movimento de Expedição Outros documentos"/>
        <transition to="(VCiv) Junção preparação intimação" name="(VCiv) Junção preparação intimação"/>
    </decision>
    <node name="(VCiv) Lançar movimento de Expedição de Aviso de Recebimento">
        <transition to="(VCiv) Junção preparação intimação" name="(VCiv) Junção preparação intimação"/>
        <event type="node-enter">
            <action expression="#{comunicacaoProcessualAction.enviarExpedientesLancarMovimentos('C', 'processoExpedienteAtual','#{preencherMovimento.deCodigo(60).associarAoDocumento(processoExpedienteAtual.getProcessoDocumento()).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(74).lancarMovimento()}')}"/>
        </event>
    </node>
    <node name="(VCiv) Lançar movimento de Expedição Outros documentos">
        <transition to="(VCiv) Junção preparação intimação" name="(VCiv) Junção preparação intimação"/>
        <event type="node-enter">
            <action expression="#{comunicacaoProcessualAction.enviarExpedientesLancarMovimentos('E', 'processoExpedienteAtual','#{preencherMovimento.deCodigo(60).associarAoDocumento(processoExpedienteAtual.getProcessoDocumento()).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(80).lancarMovimento()}')}"/>
        </event>
    </node>
    <node name="(VCiv) Lançar movimento de Expedição de mandado">
        <transition to="(VCiv) Junção preparação intimação" name="(VCiv) Junção preparação intimação"/>
        <event type="node-enter">
            <action expression="#{comunicacaoProcessualAction.enviarExpedientesLancarMovimentos('M', 'processoExpedienteAtual','#{preencherMovimento.deCodigo(60).associarAoDocumento(processoExpedienteAtual.getProcessoDocumento()).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(78).lancarMovimento()}')}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="Nó de Desvio - (VCiv) Movimentações PAC">
        <task name="Nó de Desvio - (VCiv) Movimentações PAC" swimlane="Nó de Desvio - (VCiv) Movimentações PAC"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
