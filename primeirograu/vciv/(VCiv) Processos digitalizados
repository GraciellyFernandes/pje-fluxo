<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(VCiv) Processos digitalizados">
    <description><![CDATA[.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (VCiv) Processos digitalizados">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="(VCiv) Lançar movimento de recebimento dos autos" name="(VCiv) Lançar movimento de recebimento dos autos"/>
    </start-state>  
    <!-- NODES -->
    <node name="(VCiv) Lançar movimento de recebimento dos autos">
        <transition to="(VCiv) Autos recebidos de digitalização" name="(VCiv) Autos recebidos de digitalização"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(132).lancarMovimento()}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(VCiv) Autos recebidos de digitalização">
        <task name="(VCiv) Autos recebidos de digitalização" swimlane="Secretaria">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*

1. Variável: aviso1
   Label:
   Escrita: Sim
   Obrig.: Não
   Tipo: Aviso

2. Variável: MovimentarEmLote
   Label: 
   Escrita: Sim
   Obrig.: Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Término" name="Encaminhar para análise de secretaria"/>
        <transition to="Nó de Desvio - (VCiv) Processos digitalizados" name="Nó de Desvio - (VCiv) Processos digitalizados">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Encaminhamento para instância superior" name="Remeter processo à instância superior"/>
    </task-node>
    <process-state name="(VCiv) Encaminhamento para instância superior">
        <sub-process name="(VCiv) Cumprimento de decisão" binding="late"/>
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:encaminhar_instancia_superior', 'true')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:encaminhar_instancia_superior')}"/>
        </event>
    </process-state>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (VCiv) Processos digitalizados">
        <task name="Nó de Desvio - (VCiv) Processos digitalizados" swimlane="Nó de Desvio - (VCiv) Processos digitalizados"/>
        <transition to="Término" name="Término"/>
        <transition to="(VCiv) Autos recebidos de digitalização" name="(VCiv) Autos recebidos de digitalização"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
