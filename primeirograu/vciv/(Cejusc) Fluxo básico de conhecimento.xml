<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="CEJUSC">
    <description><![CDATA[.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Secretária">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,6:1469')}" actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - CEJUSC">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretária"/>
        <transition to="(Cejusc) Concluso para sentença de homologação e(ou) extinção" name="Concluso para sentença de homologação e(ou) extinção"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(Cejusc) Concluso para sentença de homologação e(ou) extinção">
        <task name="(Cejusc) Concluso para sentença de homologação e(ou) extinção" swimlane="Secretária">
            <controller>
                <variable name="minutaEmElaboracao" mapped-name="textEditCombo:minutaEmElaboracao" access="read,write"/>
                <variable name="MinutarEmLote" mapped-name="minutarLote:MinutarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="(Cejusc) Assinar sentença de homologação e(ou) extinção" name="Encaminhar para assinatura"/>
        <transition to="Nó de Desvio - CEJUSC" name="Nó de Desvio - CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-start">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds','62')}"/>
            <action name="Condicao do lancamento temporario de movimentos" expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{true}')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(Cejusc) Assinar sentença de homologação e(ou) extinção">
        <task name="(Cejusc) Assinar sentença de homologação e(ou) extinção" swimlane="Secretária">
            <controller>
                <variable name="Processo_Fluxo_revisarMinuta" mapped-name="frame:Processo_Fluxo_revisarMinuta" access="read,write"/>
                <variable name="confirmarMovimentacao" mapped-name="homologadorEventoTree:confirmarMovimentacao" access="read,write"/>
                <variable name="AssinarEmLote" mapped-name="assinarLote:AssinarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="(Cejusc) Concluso para sentença de homologação e(ou) extinção" name="Retornar para minuta"/>
        <transition to="Nó de Desvio - CEJUSC" name="Nó de Desvio - CEJUSC">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(Cejusc) Arquivar processo" name="Arquivar processo">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-end">
            <action expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{false}')}"/>
        </event>
        <event type="task-start">
            <action expression="#{tipoDocumento.set('Processo_Fluxo_revisarMinuta',62)}"/>
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('Arquivar processo')}"/>
        </event>
    </task-node>
    <process-state name="(Cejusc) Arquivar processo">
        <sub-process name="(Cejusc) Arquivamento" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - CEJUSC">
        <task name="Nó de Desvio - CEJUSC" swimlane="Nó de Desvio - CEJUSC"/>
        <transition to="Término" name="Término"/>
        <transition to="(Cejusc) Assinar sentença de homologação e(ou) extinção" name="Assinar sentença de homologação e(ou) extinção"/>
        <transition to="(Cejusc) Concluso para sentença de homologação e(ou) extinção" name="Concluso para sentença de homologação e(ou) extinção"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
