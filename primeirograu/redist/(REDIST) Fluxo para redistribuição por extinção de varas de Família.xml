<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(REDIST) Fluxo para redistribuição por extinção de varas de Família">
    <description><![CDATA[....]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (REDIST) Fluxo para redistribuição por extinção de varas de Família">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="solicitante">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="solicitante"/>
        <transition to="(REDIST) Verificar dígito 0" name="(REDIST) Verificar dígito 0"/>
    </start-state>  
    <!-- NODES -->
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;0&quot;) ? '(REDIST) Redistribuir 9 Vara de Família' : '(REDIST) Verificar dígito 1'}" name="(REDIST) Verificar dígito 0">
        <transition to="(REDIST) Verificar dígito 1" name="(REDIST) Verificar dígito 1"/>
        <transition to="(REDIST) Redistribuir 9 Vara de Família" name="(REDIST) Redistribuir 9 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;1&quot;) ? '(REDIST) Redistribuir 1 Vara de Família' : '(REDIST) Verificar dígito 2'}" name="(REDIST) Verificar dígito 1">
        <transition to="(REDIST) Verificar dígito 2" name="(REDIST) Verificar dígito 2"/>
        <transition to="(REDIST) Redistribuir 1 Vara de Família" name="(REDIST) Redistribuir 1 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;2&quot;) ? '(REDIST) Redistribuir 2 Vara de Família' : '(REDIST) Verificar dígito 3'}" name="(REDIST) Verificar dígito 2">
        <transition to="(REDIST) Verificar dígito 3" name="(REDIST) Verificar dígito 3"/>
        <transition to="(REDIST) Redistribuir 2 Vara de Família" name="(REDIST) Redistribuir 2 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;3&quot;) ? '(REDIST) Redistribuir 3 Vara de Família' : '(REDIST) Verificar dígito 4'}" name="(REDIST) Verificar dígito 3">
        <transition to="(REDIST) Verificar dígito 4" name="(REDIST) Verificar dígito 4"/>
        <transition to="(REDIST) Redistribuir 3 Vara de Família" name="(REDIST) Redistribuir 3 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;4&quot;)? '(REDIST) Redistribuir 4 Vara de Família' : '(REDIST) Verificar dígito 5'}" name="(REDIST) Verificar dígito 4">
        <transition to="(REDIST) Verificar dígito 5" name="(REDIST) Verificar dígito 5"/>
        <transition to="(REDIST) Redistribuir 4 Vara de Família" name="(REDIST) Redistribuir 4 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;5&quot;) ? '(REDIST) Redistribuir 5 Vara de Família' : '(REDIST) Verificar dígito 6'}" name="(REDIST) Verificar dígito 5">
        <transition to="(REDIST) Verificar dígito 6" name="(REDIST) Verificar dígito 6"/>
        <transition to="(REDIST) Redistribuir 5 Vara de Família" name="(REDIST) Redistribuir 5 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;6&quot;) ? '(REDIST) Redistribuir 6 Vara de Família' : '(REDIST) Verificar dígito 7'}" name="(REDIST) Verificar dígito 6">
        <transition to="(REDIST) Verificar dígito 7" name="(REDIST) Verificar dígito 7"/>
        <transition to="(REDIST) Redistribuir 6 Vara de Família" name="(REDIST) Redistribuir 6 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;7&quot;) ? '(REDIST) Redistribuir 8 Vara de Família' : '(REDIST) Verificar dígito 8'}" name="(REDIST) Verificar dígito 7">
        <transition to="(REDIST) Verificar dígito 8" name="(REDIST) Verificar dígito 8"/>
        <transition to="(REDIST) Redistribuir 8 Vara de Família" name="(REDIST) Redistribuir 8 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;8&quot;) ? '(REDIST) Redistribuir 8 Vara de Família' : '(REDIST) Verificar dígito 9'}" name="(REDIST) Verificar dígito 8">
        <transition to="(REDIST) Verificar dígito 9" name="(REDIST) Verificar dígito 9"/>
        <transition to="(REDIST) Redistribuir 8 Vara de Família" name="(REDIST) Redistribuir 8 Vara de Família"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().getProcesso().getNumeroProcesso().substring(6,7).equals(&quot;9&quot;) ? '(REDIST) Redistribuir 9 Vara de Família' : '(REDIST) Nó Dez'}" name="(REDIST) Verificar dígito 9">
        <transition to="Término" name="Término"/>
        <transition to="(REDIST) Redistribuir 9 Vara de Família" name="(REDIST) Redistribuir 9 Vara de Família"/>
    </decision>
    <node name="(REDIST) Redistribuir 1 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(69)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(69))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <node name="(REDIST) Redistribuir 2 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(65)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(65))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <node name="(REDIST) Redistribuir 3 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(67)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(67))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <node name="(REDIST) Redistribuir 4 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(60)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(60))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <node name="(REDIST) Redistribuir 5 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(63)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(63))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <node name="(REDIST) Redistribuir 6 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(66)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(66))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <node name="(REDIST) Redistribuir 8 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(64)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(64))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <node name="(REDIST) Redistribuir 9 Vara de Família">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.getInstance().setInTipoDistribuicao('CE')}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setJurisdicaoRedistribuicao(jurisdicaoService.getJurisdicaoByOrgaoJulgador(orgaoJulgadorService.findById(62)))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.setOrgaoJulgadorRedistribuicao(orgaoJulgadorService.findById(62))}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoExtincaoUnidadeJudiciaria()}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (REDIST) Fluxo para redistribuição por extinção de varas de Família">
        <task name="Nó de Desvio - (REDIST) Fluxo para redistribuição por extinção de varas de Família" swimlane="Nó de Desvio - (REDIST) Fluxo para redistribuição por extinção de varas de Família"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
