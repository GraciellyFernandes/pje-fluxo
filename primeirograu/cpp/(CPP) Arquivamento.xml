<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(CPP) Arquivamento"> 
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (CPP) Arquivamento">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="(CPP) Arquivo - CONFIRMAR" name="(CPP) Arquivo - CONFIRMAR"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(CPP) Arquivo - CONFIRMAR">
        <task name="(CPP) Arquivo - CONFIRMAR" swimlane="Secretaria"/>
        <transition to="Nó de Desvio - (CPP) Arquivamento" name="Nó de Desvio - (CPP) Arquivamento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Cancelar e sair da tarefa"/>
        <transition to="(CPP) Lançar movimentação de arquivo definitivo" name="Arquivar definitivamente"/>
    </task-node>
    <node name="(CPP) Lançar movimentação de arquivo definitivo">
        <transition to="(CPP) ~Arquivo definitivo" name="(CPP) ~Arquivo definitivo"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(246).lancarMovimento()}"/>
            <action expression="#{tramitacaoProcessualService.removerSituacao('jus:andamento')}"/>
            <action expression="#{tramitacaoProcessualService.acrescentarSituacao('jus:arquivado')}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(CPP) ~Arquivo definitivo">
        <task name="(CPP) ~Arquivo definitivo" swimlane="Secretaria"/>
        <transition to="Nó de Desvio - (CPP) Arquivamento" name="Nó de Desvio - (CPP) Arquivamento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(CPP) Subfluxo Preparar ato judicial de decisão sobre reativação" name="Enviar conclusos para decisão sobre reativação"/>
    </task-node>
    <process-state name="(CPP) Subfluxo Preparar ato judicial de decisão sobre reativação">
        <sub-process name="(CPP) Preparar ato judicial de decisão sobre reativação" binding="late"/>
        <transition to="(CPP) Sinalizou que vai reativar?" name="(CPP) Sinalizou que vai reativar?"/>
    </process-state>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('pje:tjrn:cpp:sinalizacao') == 'manterArquivado' ? '(CPP) ~Arquivo definitivo' : '(CPP) Lançar movimento de reativação'}" name="(CPP) Sinalizou que vai reativar?">
        <transition to="(CPP) ~Arquivo definitivo" name="(CPP) ~Arquivo definitivo"/>
        <transition to="(CPP) Lançar movimento de reativação" name="(CPP) Lançar movimento de reativação"/>
    </decision>
    <node name="(CPP) Lançar movimento de reativação">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(849).lancarMovimento()}"/>
            <action expression="#{tramitacaoProcessualService.removerSituacao('jus:arquivado')}"/>
            <action expression="#{tramitacaoProcessualService.acrescentarSituacao('jus:andamento')}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (CPP) Arquivamento">
        <task name="Nó de Desvio - (CPP) Arquivamento" swimlane="Nó de Desvio - (CPP) Arquivamento"/>
        <transition to="Término" name="Término"/>
        <transition to="(CPP) Arquivo - CONFIRMAR" name="(CPP) Arquivo - CONFIRMAR"/>
        <transition to="(CPP) ~Arquivo definitivo" name="(CPP) ~Arquivo definitivo"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
