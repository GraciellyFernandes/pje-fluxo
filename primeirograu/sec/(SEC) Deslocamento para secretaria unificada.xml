<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SEC) Deslocamento para secretaria unificada">
    <description><![CDATA[Fluxo destinado ao deslocamento para secretaria unificada.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (SEC) Deslocamento para secretaria unificada">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to="(SEC) É cível mossoró ?" name="(SEC) É Cível Mossoró ?"/>
    </start-state>  
    <!-- NODES -->
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (SEC) Deslocamento para secretaria unificada">
        <task name="Nó de Desvio - (SEC) Deslocamento para secretaria unificada" swimlane="Nó de Desvio - (SEC) Deslocamento para secretaria unificada"/>
        <transition to="Término" name="Término"/>
    </task-node>
    <decision expression="#{parametroUtil.getParametro('pje:tjrn:OJsCiveisMossoro').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat('_')) ? '(SEC) Deslocar secretaria cível mossoró' : '(SEC) É Família Mossoró ?'}" name="(SEC) É cível mossoró ?">
        <transition to="(SEC) É família mossoró ?" name="(SEC) É Família Mossoró ?"/>
        <transition to="(SEC) Deslocar secretaria cível mossoró" name="(SEC) Deslocar secretaria cível mossoró"/>
    </decision>
    <decision expression="#{parametroUtil.getParametro('pje:tjrn:OJsFamiliaMossoro').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat('_')) ? '(SEC) Deslocar secretaria família mossoró' : 'Término'}" name="(SEC) É família mossoró ?">
        <transition to="Término" name="Término"/>
        <transition to="(SEC) Deslocar secretaria família mossoró" name="(SEC) Deslocar secretaria família mossoró"/>
    </decision>
    <node name="(SEC) Deslocar secretaria cível mossoró">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoDestino', 112)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoCargoDestino', 270)}"/>
            <action expression="#{tramitacaoProcessualService.deslocarFluxoParaOrgaoDiversoTJRN(processInstance.contextInstance.getVariable('processo'))}"/>
        </event>
    </node>
    <node name="(SEC) Deslocar secretaria família mossoró">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoDestino', 113)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoCargoDestino', 271)}"/>
            <action expression="#{tramitacaoProcessualService.deslocarFluxoParaOrgaoDiversoTJRN(processInstance.contextInstance.getVariable('processo'))}"/>
        </event>
    </node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
