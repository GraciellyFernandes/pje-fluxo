<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Controle de prazos">
    <description><![CDATA[Fluxo destinado a permitir o controle automatizado de prazos. Os processos pendentes ficam em um nó oculto.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - Controle de prazos">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,6:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,8:5852,8:5853')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="Testa existência de expedientes" name="Testa existência de expedientes"/>
    </start-state>  
    <!-- NODES -->
    <decision expression="#{atoComunicacaoService.getAtosComunicacaoAbertos(processoJudicialService.findById(org.jboss.seam.bpm.processInstance.contextInstance.getVariable('processo'))) &gt; 0 ? 'Processo com prazo em curso' : 'Término'}" name="Testa existência de expedientes">
        <transition to="Processo com prazo em curso" name="Processo com prazo em curso"/>
        <transition to="Término" name="Término"/>
    </decision>
    <task-node end-tasks="true" name="Processo com prazo em curso">
        <task name="Processo com prazo em curso" swimlane="Secretaria"/>
        <transition to="Verificar existência de outros pendentes" name="Verificar existência de outros pendentes"/>
        <transition to="Nó de Desvio - Controle de prazos" name="Nó de Desvio - Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:aguardaPeticao', 'true')}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:aguardaPeticao')}"/>
        </event>
    </task-node>
    <decision expression="#{atoComunicacaoService.getAtosComunicacaoAbertos(processoJudicialService.findById(org.jboss.seam.bpm.processInstance.contextInstance.getVariable('processo'))) &gt; 0 ? 'Analisar manifestação' : 'Término'}" name="Verificar existência de outros pendentes">
        <transition to="Analisar manifestação" name="Analisar manifestação"/>
        <transition to="Término" name="Término"/>
    </decision>
    <task-node end-tasks="true" name="Analisar manifestação">
        <task name="Analisar manifestação parcial" swimlane="Secretaria">
            <controller/>
        </task>
        <transition to="Término" name="Ignorar demais manifestações"/>
        <transition to="Processo com prazo em curso" name="Aguardar demais manifestações"/>
        <transition to="Nó de Desvio - Controle de prazos" name="Nó de Desvio - Controle de prazos">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - Controle de prazos">
        <task name="Nó de Desvio - Controle de prazos" swimlane="Nó de Desvio - Controle de prazos"/>
        <transition to="Analisar manifestação" name="Analisar manifestação"/>
        <transition to="Processo com prazo em curso" name="Processo com prazo em curso"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
