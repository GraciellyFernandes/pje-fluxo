<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(EF) Preparar ato judicial de decisão sobre reativação">
    <description><![CDATA[Código do fluxo: EF_PAJ_DEC_REAT.

Descrição: Fluxo destinado ao preparo de atos judiciais de decisões sobre reativação.
Raia        Localização Papel
Assessoria  Gabinete    Magistrado
Assessoria  Assessoria  Assessor
Assessoria  Secretaria  Chefe de Secretaria
Magistrado  Gabinete    Magistrado
Magistrado  Assessoria  Assessor
Magistrado  Secretaria  Chefe de Secretaria]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Assessoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('6:1469,7:5197,5:1338')}"/>
    </swimlane>
    <swimlane name="Magistrado">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('6:1469,7:5197,5:1338')}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Assessoria"/>
        <transition to="(EF) Concluso para decisão sobre reativação - MINUTAR" name="(EF) Concluso para decisão sobre reativação - MINUTAR"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(EF) Concluso para decisão sobre reativação - MINUTAR">
        <task name="(EF) Concluso para decisão sobre reativação - MINUTAR" swimlane="Assessoria">
            <controller>
                <variable name="minuta_ato_judicial" mapped-name="textEditCombo:minuta_ato_judicial" access="read,write,required"/>
                <variable name="minutarLote" mapped-name="minutarLote:minutarLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*
1. Variável: minuta_ato_judicial
   Label: Minuta em elaboração
   Escrita: Sim
   Obrig. Sim
   Tipo: Editor
2. Variável: minutarLote
   Label: Minutar em lote
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Minutar em Lote]]></description>
        <transition to="(EF) Concluso para decisão sobre reativação - ASSINAR" name="Encaminhar para assinatura do magistrado"/>
        <transition to="(EF) Concluso para decisão sobre reativação - CONFIRMAR" name="Encaminhar para confirmação da minuta"/>
        <transition to="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação" name="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos', 'Prosseguir através de ato ordinatório,Encaminhar para decisão genérica')}"/>
        </event>
        <event type="task-end">
            <action expression="#{not empty tramitacaoProcessualService.recuperaVariavelTarefa('textEditCombo:minuta_ato_judicial') ? tramitacaoProcessualService.gravaVariavel('minutaEmElaboracao', tramitacaoProcessualService.recuperaVariavelTarefa('textEditCombo:minuta_ato_judicial')) : ''}"/>
            <action expression="#{not empty processoHome.idProcessoDocumento ? tramitacaoProcessualService.gravaVariavel('minutaEmElaboracao', processoHome.idProcessoDocumento) : ''}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('tiposDisponiveisIds')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos')}"/>
        </event>
        <event type="task-start">
            <action name="Condicao do lancamento temporario de movimentos" expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{true}')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds', '63,64')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(EF) Concluso para decisão sobre reativação - CONFIRMAR">
        <task name="(EF) Concluso para decisão sobre reativação - CONFIRMAR" swimlane="Assessoria">
            <controller>
                <variable name="Processo_Fluxo_revisarMinuta" mapped-name="frame:Processo_Fluxo_revisarMinuta" access="read,write"/>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
                <variable name="assinaturaLote" mapped-name="assinarLote:assinaturaLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*
1. Variável: Processo_Fluxo_revisarMinuta
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Frame
2. Variável: movimentacaoLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Movimentação em Lote
3. Variável: assinaturaLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Assinatura em Lote]]></description>
        <transition to="(EF) Concluso para decisão sobre reativação - ASSINAR" name="Encaminhar para assinatura do magistrado"/>
        <transition to="(EF) Concluso para decisão sobre reativação - MINUTAR" name="Retornar para minuta"/>
        <transition to="(EF) Enviar autos à secretaria" name="(EF) Enviar autos à secretaria">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(EF) Enviar autos à secretaria" name="Documento já assinado! Encaminhar para secretaria">
            <condition expression="#{not empty revisarMinutaAction.processoDocumento.processoDocumentoBin.signatarios and revisarMinutaAction.processoDocumento.ativo}"/>
        </transition>
        <transition to="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação" name="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{false}')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds', '63,64')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('frameDefaultLeavingTransition', '(EF) Enviar autos à secretaria')}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('tiposDisponiveisIds')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('frameDefaultLeavingTransition')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(EF) Concluso para decisão sobre reativação - ASSINAR">
        <task name="(EF) Concluso para decisão sobre reativação - ASSINAR" swimlane="Magistrado">
            <controller>
                <variable name="Processo_Fluxo_revisarMinuta" mapped-name="frame:Processo_Fluxo_revisarMinuta" access="read,write"/>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
                <variable name="assinaturaLote" mapped-name="assinarLote:assinaturaLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[*Variáveis*
1. Variável: Processo_Fluxo_revisarMinuta
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Frame
2. Variável: movimentacaoLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Movimentação em Lote
3. Variável: assinaturaLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Assinatura em Lote]]></description>
        <transition to="(EF) Concluso para decisão sobre reativação - MINUTAR" name="Retornar para minuta"/>
        <transition to="(EF) Concluso para decisão sobre reativação - CONFIRMAR" name="Retornar para confirmação da minuta"/>
        <transition to="(EF) Enviar autos à secretaria" name="(EF) Enviar autos à secretaria">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(EF) Enviar autos à secretaria" name="Documento já assinado! Encaminhar para secretaria">
            <condition expression="#{processoHome.instance.idProcesso &gt; 0 and not empty revisarMinutaAction.processoDocumento.processoDocumentoBin.signatarios and revisarMinutaAction.processoDocumento.ativo}"/>
        </transition>
        <transition to="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação" name="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('frameDefaultLeavingTransition', '(EF) Enviar autos à secretaria')}"/>
            <action expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{false}')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds', '63,64')}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('tiposDisponiveisIds')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('frameDefaultLeavingTransition')}"/>
        </event>
    </task-node>
    <process-state name="(EF) Enviar autos à secretaria">
        <sub-process name="(EF) Autos recebidos do gabinete - Reativação" binding="late"/>
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('ef:paj:urgente', false)}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('ef:paj:urgente')}"/>
        </event>
    </process-state>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação">
        <task name="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação" swimlane="Nó de Desvio - (EF) Preparar ato judicial de decisão sobre reativação"/>
        <transition to="(EF) Concluso para decisão sobre reativação - MINUTAR" name="(EF) Concluso para decisão sobre reativação - MINUTAR"/>
        <transition to="(EF) Concluso para decisão sobre reativação - CONFIRMAR" name="(EF) Concluso para decisão sobre reativação - CONFIRMAR"/>
        <transition to="(EF) Concluso para decisão sobre reativação - ASSINAR" name="(EF) Concluso para decisão sobre reativação - ASSINAR"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
