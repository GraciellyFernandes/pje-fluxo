<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(EF) Bacen Jud">
    <description><![CDATA[Código do fluxo: EF_BACENJUD.

Descrição: Fluxo responsável pelas tarefas do Bacen Jud.

Raia        Localização   Papel
Secretaria  Secretaria    Chefe de Secretaria
Secretaria  Gabinete      Magistrado]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (EF) Bacen Jud">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,6:1469,8:5852,8:5853,6:5901,7:5197')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to=" (EF) Bacen Jud - Minutar bloqueio ou desbloqueio" name=" (EF) Bacen Jud - Minutar bloqueio ou desbloqueio"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name=" (EF) Bacen Jud - Minutar bloqueio ou desbloqueio">
        <task name=" (EF) Bacen Jud - Minutar bloqueio ou desbloqueio" swimlane="Secretaria">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[* Variáveis *

1. Variável: aviso
   Label: Para juntar a minuta de bloqueio, clique no número do processo e Anexar documentos.
   Escrita: Sim
   Obrig. Não
   Tipo: Aviso

2. Variável: movimentacaoLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="(EF) Bacen Jud - Aguardando resposta" name="Aguardar resposta"/>
        <transition to="Nó de Desvio - (EF) Bacen Jud" name="Nó de Desvio - (EF) Bacen Jud">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(EF) Devolução à secretaria" name="Finalizar tarefa"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(EF) Bacen Jud - Aguardando resposta">
        <task name="(EF) Bacen Jud - Aguardando resposta" swimlane="Secretaria">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[* Variáveis *

1. Variável: aviso
   Label: Para juntar a resposta de Bacen, clique no número do processo e Anexar documentos.
   Escrita: Sim
   Obrig. Não
   Tipo: Aviso

2. Variável: movimentacaoLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="(EF) Bacen Jud - Minutar transferência" name="Minutar transferência"/>
        <transition to="Nó de Desvio - (EF) Bacen Jud" name="Nó de Desvio - (EF) Bacen Jud">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(EF) Devolução à secretaria" name="Finalizar tarefa"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(EF) Bacen Jud - Minutar transferência">
        <task name="(EF) Bacen Jud - Minutar transferência" swimlane="Secretaria">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[* Variáveis *

1. Variável: aviso
   Label: Para juntar a minuta de transferência, clique no número de processo e Anexar documentos.
   Escrita: Sim
   Obrig. Não
   Tipo: Aviso

2. Variável: movimentacaoLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="(EF) Bacen Jud - Aguardando resposta de transferência" name="Aguardar resposta de transferência"/>
        <transition to="Nó de Desvio - (EF) Bacen Jud" name="Nó de Desvio - (EF) Bacen Jud">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(EF) Devolução à secretaria" name="Finalizar tarefa"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(EF) Bacen Jud - Aguardando resposta de transferência">
        <task name="(EF) Bacen Jud - Aguardando resposta de transferência" swimlane="Secretaria">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[* Variáveis *

1. Variável: aviso
   Label: Para juntar a resposta de transferência, clique no número do processo e Anexar documentos.
   Escrita: Sim
   Obrig. Não
   Tipo: Aviso

2. Variável: movimentacaoLote
   Label: 
   Escrita: Sim
   Obrig. Não
   Tipo: Habilitar Movimentação em Lote]]></description>
        <transition to="Nó de Desvio - (EF) Bacen Jud" name="Nó de Desvio - (EF) Bacen Jud">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(EF) Devolução à secretaria" name="Finalizar tarefa"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <process-state name="(EF) Devolução à secretaria">
        <sub-process name="(EF) Fluxo de devolução à secretaria" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (EF) Bacen Jud">
        <task name="Nó de Desvio - (EF) Bacen Jud" swimlane="Nó de Desvio - (EF) Bacen Jud"/>
        <transition to="Término" name="Término"/>
        <transition to=" (EF) Bacen Jud - Minutar bloqueio ou desbloqueio" name=" (EF) Bacen Jud - Minutar bloqueio ou desbloqueio"/>
        <transition to="(EF) Bacen Jud - Aguardando resposta" name="(EF) Bacen Jud - Aguardando resposta"/>
        <transition to="(EF) Bacen Jud - Minutar transferência" name="(EF) Bacen Jud - Minutar transferência"/>
        <transition to="(EF) Bacen Jud - Aguardando resposta de transferência" name="(EF) Bacen Jud - Aguardando resposta de transferência"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
